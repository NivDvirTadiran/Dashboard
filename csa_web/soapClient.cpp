/* soapClient.cpp
   Generated by gSOAP 2.7.13 from emisweb.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.13 2009-06-24 12:05:50 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupDetailFullInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupDetailFullInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupDetailFullInfo)
{	struct __ns1__GroupDetailFullInfo soap_tmp___ns1__GroupDetailFullInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupDetailFullInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupDetailFullInfo.ns1__RequestGroupDetailFullInfo = ns1__RequestGroupDetailFullInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupDetailFullInfo(soap, &soap_tmp___ns1__GroupDetailFullInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupDetailFullInfo(soap, &soap_tmp___ns1__GroupDetailFullInfo, "-ns1:GroupDetailFullInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupDetailFullInfo(soap, &soap_tmp___ns1__GroupDetailFullInfo, "-ns1:GroupDetailFullInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupDetailFullInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupDetailFullInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupDetailFullInfo->soap_get(soap, "ns1:ReturnGroupDetailFullInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupQueInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupQueInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupQueInfo)
{	struct __ns1__GroupQueInfo soap_tmp___ns1__GroupQueInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupQueInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupQueInfo.ns1__RequestGroupQueInfo = ns1__RequestGroupQueInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupQueInfo(soap, &soap_tmp___ns1__GroupQueInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupQueInfo(soap, &soap_tmp___ns1__GroupQueInfo, "-ns1:GroupQueInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupQueInfo(soap, &soap_tmp___ns1__GroupQueInfo, "-ns1:GroupQueInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupQueInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupQueInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupQueInfo->soap_get(soap, "ns1:ReturnGroupQueInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupAgentsInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupAgentsInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupAgentsInfo)
{	struct __ns1__GroupAgentsInfo soap_tmp___ns1__GroupAgentsInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupAgentsInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupAgentsInfo.ns1__RequestGroupAgentsInfo = ns1__RequestGroupAgentsInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupAgentsInfo(soap, &soap_tmp___ns1__GroupAgentsInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupAgentsInfo(soap, &soap_tmp___ns1__GroupAgentsInfo, "-ns1:GroupAgentsInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupAgentsInfo(soap, &soap_tmp___ns1__GroupAgentsInfo, "-ns1:GroupAgentsInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupAgentsInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupAgentsInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupAgentsInfo->soap_get(soap, "ns1:ReturnGroupAgentsInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupAbndInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupAbndInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupAbndInfo)
{	struct __ns1__GroupAbndInfo soap_tmp___ns1__GroupAbndInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupAbndInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupAbndInfo.ns1__RequestGroupAbndInfo = ns1__RequestGroupAbndInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupAbndInfo(soap, &soap_tmp___ns1__GroupAbndInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupAbndInfo(soap, &soap_tmp___ns1__GroupAbndInfo, "-ns1:GroupAbndInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupAbndInfo(soap, &soap_tmp___ns1__GroupAbndInfo, "-ns1:GroupAbndInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupAbndInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupAbndInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupAbndInfo->soap_get(soap, "ns1:ReturnGroupAbndInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupIntOvfInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupIntOvfInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupIntOvfInfo)
{	struct __ns1__GroupIntOvfInfo soap_tmp___ns1__GroupIntOvfInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupIntOvfInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupIntOvfInfo.ns1__RequestGroupIntOvfInfo = ns1__RequestGroupIntOvfInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupIntOvfInfo(soap, &soap_tmp___ns1__GroupIntOvfInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupIntOvfInfo(soap, &soap_tmp___ns1__GroupIntOvfInfo, "-ns1:GroupIntOvfInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupIntOvfInfo(soap, &soap_tmp___ns1__GroupIntOvfInfo, "-ns1:GroupIntOvfInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupIntOvfInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupIntOvfInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupIntOvfInfo->soap_get(soap, "ns1:ReturnGroupIntOvfInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupShiftInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupShiftInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupShiftInfo)
{	struct __ns1__GroupShiftInfo soap_tmp___ns1__GroupShiftInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupShiftInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupShiftInfo.ns1__RequestGroupShiftInfo = ns1__RequestGroupShiftInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupShiftInfo(soap, &soap_tmp___ns1__GroupShiftInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupShiftInfo(soap, &soap_tmp___ns1__GroupShiftInfo, "-ns1:GroupShiftInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupShiftInfo(soap, &soap_tmp___ns1__GroupShiftInfo, "-ns1:GroupShiftInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupShiftInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupShiftInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupShiftInfo->soap_get(soap, "ns1:ReturnGroupShiftInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupGeneralInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupGeneralInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupGeneralInfo)
{	struct __ns1__GroupGeneralInfo soap_tmp___ns1__GroupGeneralInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupGeneralInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupGeneralInfo.ns1__RequestGroupGeneralInfo = ns1__RequestGroupGeneralInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupGeneralInfo(soap, &soap_tmp___ns1__GroupGeneralInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupGeneralInfo(soap, &soap_tmp___ns1__GroupGeneralInfo, "-ns1:GroupGeneralInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupGeneralInfo(soap, &soap_tmp___ns1__GroupGeneralInfo, "-ns1:GroupGeneralInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupGeneralInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupGeneralInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupGeneralInfo->soap_get(soap, "ns1:ReturnGroupGeneralInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupPeriodInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupPeriodInfo, ns1__ReturnArrayDataType *ns1__ReturnGroupPeriodInfo)
{	struct __ns1__GroupPeriodInfo soap_tmp___ns1__GroupPeriodInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupPeriodInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupPeriodInfo.ns1__RequestGroupPeriodInfo = ns1__RequestGroupPeriodInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupPeriodInfo(soap, &soap_tmp___ns1__GroupPeriodInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupPeriodInfo(soap, &soap_tmp___ns1__GroupPeriodInfo, "-ns1:GroupPeriodInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupPeriodInfo(soap, &soap_tmp___ns1__GroupPeriodInfo, "-ns1:GroupPeriodInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupPeriodInfo)
		return soap_closesock(soap);
	ns1__ReturnGroupPeriodInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupPeriodInfo->soap_get(soap, "ns1:ReturnGroupPeriodInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IvrApplInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestIvrApplInfo, ns1__ReturnArrayDataType *ns1__ReturnIvrApplInfo)
{	struct __ns1__IvrApplInfo soap_tmp___ns1__IvrApplInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/IvrApplInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IvrApplInfo.ns1__RequestIvrApplInfo = ns1__RequestIvrApplInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__IvrApplInfo(soap, &soap_tmp___ns1__IvrApplInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IvrApplInfo(soap, &soap_tmp___ns1__IvrApplInfo, "-ns1:IvrApplInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IvrApplInfo(soap, &soap_tmp___ns1__IvrApplInfo, "-ns1:IvrApplInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnIvrApplInfo)
		return soap_closesock(soap);
	ns1__ReturnIvrApplInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnIvrApplInfo->soap_get(soap, "ns1:ReturnIvrApplInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IvrPortInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestIvrPortInfo, ns1__ReturnArrayDataType *ns1__ReturnIvrPortInfo)
{	struct __ns1__IvrPortInfo soap_tmp___ns1__IvrPortInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/IvrPortInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IvrPortInfo.ns1__RequestIvrPortInfo = ns1__RequestIvrPortInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__IvrPortInfo(soap, &soap_tmp___ns1__IvrPortInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IvrPortInfo(soap, &soap_tmp___ns1__IvrPortInfo, "-ns1:IvrPortInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IvrPortInfo(soap, &soap_tmp___ns1__IvrPortInfo, "-ns1:IvrPortInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnIvrPortInfo)
		return soap_closesock(soap);
	ns1__ReturnIvrPortInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnIvrPortInfo->soap_get(soap, "ns1:ReturnIvrPortInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IvrGrpInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestIvrGrpInfo, ns1__ReturnArrayDataType *ns1__ReturnIvrGrpInfo)
{	struct __ns1__IvrGrpInfo soap_tmp___ns1__IvrGrpInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/IvrGrpInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IvrGrpInfo.ns1__RequestIvrGrpInfo = ns1__RequestIvrGrpInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__IvrGrpInfo(soap, &soap_tmp___ns1__IvrGrpInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IvrGrpInfo(soap, &soap_tmp___ns1__IvrGrpInfo, "-ns1:IvrGrpInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IvrGrpInfo(soap, &soap_tmp___ns1__IvrGrpInfo, "-ns1:IvrGrpInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnIvrGrpInfo)
		return soap_closesock(soap);
	ns1__ReturnIvrGrpInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnIvrGrpInfo->soap_get(soap, "ns1:ReturnIvrGrpInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__MailboxInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestMailboxInfo, ns1__ReturnArrayDataType *ns1__ReturnMailboxInfo)
{	struct __ns1__MailboxInfo soap_tmp___ns1__MailboxInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/MailboxInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MailboxInfo.ns1__RequestMailboxInfo = ns1__RequestMailboxInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__MailboxInfo(soap, &soap_tmp___ns1__MailboxInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MailboxInfo(soap, &soap_tmp___ns1__MailboxInfo, "-ns1:MailboxInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MailboxInfo(soap, &soap_tmp___ns1__MailboxInfo, "-ns1:MailboxInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnMailboxInfo)
		return soap_closesock(soap);
	ns1__ReturnMailboxInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnMailboxInfo->soap_get(soap, "ns1:ReturnMailboxInfo", "ns1:ReturnArrayDataType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UserLogin(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LoginRequestType *ns1__RequestUserLogin, ns1__LoginReturnType *ns1__ReturnUserLogin)
{	struct __ns1__UserLogin soap_tmp___ns1__UserLogin;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/UserLogin";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UserLogin.ns1__RequestUserLogin = ns1__RequestUserLogin;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__UserLogin(soap, &soap_tmp___ns1__UserLogin);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UserLogin(soap, &soap_tmp___ns1__UserLogin, "-ns1:UserLogin", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UserLogin(soap, &soap_tmp___ns1__UserLogin, "-ns1:UserLogin", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnUserLogin)
		return soap_closesock(soap);
	ns1__ReturnUserLogin->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnUserLogin->soap_get(soap, "ns1:ReturnUserLogin", "ns1:LoginReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UserLogout(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestUserLogout, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__UserLogout soap_tmp___ns1__UserLogout;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/UserLogout";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UserLogout.ns1__RequestUserLogout = ns1__RequestUserLogout;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__UserLogout(soap, &soap_tmp___ns1__UserLogout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UserLogout(soap, &soap_tmp___ns1__UserLogout, "-ns1:UserLogout", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UserLogout(soap, &soap_tmp___ns1__UserLogout, "-ns1:UserLogout", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestGroupList, ns1__GroupListReturnType *ns1__ReturnGroupList)
{	struct __ns1__GroupList soap_tmp___ns1__GroupList;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/GroupList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupList.ns1__RequestGroupList = ns1__RequestGroupList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupList(soap, &soap_tmp___ns1__GroupList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupList(soap, &soap_tmp___ns1__GroupList, "-ns1:GroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupList(soap, &soap_tmp___ns1__GroupList, "-ns1:GroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupList)
		return soap_closesock(soap);
	ns1__ReturnGroupList->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupList->soap_get(soap, "ns1:ReturnGroupList", "ns1:GroupListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IvrPortGroupList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestIvrPortGroupList, ns1__GenListReturnType *ns1__ReturnIvrPortGroupList)
{	struct __ns1__IvrPortGroupList soap_tmp___ns1__IvrPortGroupList;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/IvrPortGroupList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IvrPortGroupList.ns1__RequestIvrPortGroupList = ns1__RequestIvrPortGroupList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__IvrPortGroupList(soap, &soap_tmp___ns1__IvrPortGroupList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IvrPortGroupList(soap, &soap_tmp___ns1__IvrPortGroupList, "-ns1:IvrPortGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IvrPortGroupList(soap, &soap_tmp___ns1__IvrPortGroupList, "-ns1:IvrPortGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnIvrPortGroupList)
		return soap_closesock(soap);
	ns1__ReturnIvrPortGroupList->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnIvrPortGroupList->soap_get(soap, "ns1:ReturnIvrPortGroupList", "ns1:GenListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IvrAppList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestIvrAppList, ns1__GenListReturnType *ns1__ReturnIvrAppList)
{	struct __ns1__IvrAppList soap_tmp___ns1__IvrAppList;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/IvrAppList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IvrAppList.ns1__RequestIvrAppList = ns1__RequestIvrAppList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__IvrAppList(soap, &soap_tmp___ns1__IvrAppList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IvrAppList(soap, &soap_tmp___ns1__IvrAppList, "-ns1:IvrAppList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IvrAppList(soap, &soap_tmp___ns1__IvrAppList, "-ns1:IvrAppList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnIvrAppList)
		return soap_closesock(soap);
	ns1__ReturnIvrAppList->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnIvrAppList->soap_get(soap, "ns1:ReturnIvrAppList", "ns1:GenListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__MailAccList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestMailAccList, ns1__GenListReturnType *ns1__ReturnMailAccList)
{	struct __ns1__MailAccList soap_tmp___ns1__MailAccList;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/MailAccList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MailAccList.ns1__RequestMailAccList = ns1__RequestMailAccList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__MailAccList(soap, &soap_tmp___ns1__MailAccList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MailAccList(soap, &soap_tmp___ns1__MailAccList, "-ns1:MailAccList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MailAccList(soap, &soap_tmp___ns1__MailAccList, "-ns1:MailAccList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnMailAccList)
		return soap_closesock(soap);
	ns1__ReturnMailAccList->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnMailAccList->soap_get(soap, "ns1:ReturnMailAccList", "ns1:GenListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AgentsPerGroupInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenInfoRequestType *ns1__RequestGroupAgentsMatrix, ns1__ReturnMatrixDataTypeBGperGroupArr *ns1__ReturnGroupAgentsMatrix)
{	struct __ns1__AgentsPerGroupInfo soap_tmp___ns1__AgentsPerGroupInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/AgentsPerGroupInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AgentsPerGroupInfo.ns1__RequestGroupAgentsMatrix = ns1__RequestGroupAgentsMatrix;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__AgentsPerGroupInfo(soap, &soap_tmp___ns1__AgentsPerGroupInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AgentsPerGroupInfo(soap, &soap_tmp___ns1__AgentsPerGroupInfo, "-ns1:AgentsPerGroupInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AgentsPerGroupInfo(soap, &soap_tmp___ns1__AgentsPerGroupInfo, "-ns1:AgentsPerGroupInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnGroupAgentsMatrix)
		return soap_closesock(soap);
	ns1__ReturnGroupAgentsMatrix->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnGroupAgentsMatrix->soap_get(soap, "ns1:ReturnGroupAgentsMatrix", "ns1:ReturnMatrixDataTypeBGperGroupArr");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__AgentsList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestAgentsList, ns1__AgentsListReturnType *ns1__ReturnAgentsList)
{	struct __ns1__AgentsList soap_tmp___ns1__AgentsList;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/AgentsList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AgentsList.ns1__RequestAgentsList = ns1__RequestAgentsList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__AgentsList(soap, &soap_tmp___ns1__AgentsList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AgentsList(soap, &soap_tmp___ns1__AgentsList, "-ns1:AgentsList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AgentsList(soap, &soap_tmp___ns1__AgentsList, "-ns1:AgentsList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnAgentsList)
		return soap_closesock(soap);
	ns1__ReturnAgentsList->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnAgentsList->soap_get(soap, "ns1:ReturnAgentsList", "ns1:AgentsListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__BriefAgents(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__BriefInfoRequestType *ns1__RequestBriefAgentsMatrix, ns1__ReturnMatrixDataTypeBG *ns1__ReturnBriefAgentsMatrix)
{	struct __ns1__BriefAgents soap_tmp___ns1__BriefAgents;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/BriefAgents";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BriefAgents.ns1__RequestBriefAgentsMatrix = ns1__RequestBriefAgentsMatrix;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__BriefAgents(soap, &soap_tmp___ns1__BriefAgents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BriefAgents(soap, &soap_tmp___ns1__BriefAgents, "-ns1:BriefAgents", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BriefAgents(soap, &soap_tmp___ns1__BriefAgents, "-ns1:BriefAgents", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnBriefAgentsMatrix)
		return soap_closesock(soap);
	ns1__ReturnBriefAgentsMatrix->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnBriefAgentsMatrix->soap_get(soap, "ns1:ReturnBriefAgentsMatrix", "ns1:ReturnMatrixDataTypeBG");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DefaultWorkspace(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__DefaultWorkspaceRequestType *ns1__RequestDefaultWorkspace, ns1__DefaultWorkspaceReturnType *ns1__ReturnDefaultWorkspace)
{	struct __ns1__DefaultWorkspace soap_tmp___ns1__DefaultWorkspace;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/DefaultWorkspace";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DefaultWorkspace.ns1__RequestDefaultWorkspace = ns1__RequestDefaultWorkspace;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__DefaultWorkspace(soap, &soap_tmp___ns1__DefaultWorkspace);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DefaultWorkspace(soap, &soap_tmp___ns1__DefaultWorkspace, "-ns1:DefaultWorkspace", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DefaultWorkspace(soap, &soap_tmp___ns1__DefaultWorkspace, "-ns1:DefaultWorkspace", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnDefaultWorkspace)
		return soap_closesock(soap);
	ns1__ReturnDefaultWorkspace->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnDefaultWorkspace->soap_get(soap, "ns1:ReturnDefaultWorkspace", "ns1:DefaultWorkspaceReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ReportListData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__ReportListDataRequestType *ns1__RequestReportListData, ns1__ReportListDataReturnType *ns1__ReturnReportListData)
{	struct __ns1__ReportListData soap_tmp___ns1__ReportListData;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/ReportListData";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReportListData.ns1__RequestReportListData = ns1__RequestReportListData;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__ReportListData(soap, &soap_tmp___ns1__ReportListData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReportListData(soap, &soap_tmp___ns1__ReportListData, "-ns1:ReportListData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReportListData(soap, &soap_tmp___ns1__ReportListData, "-ns1:ReportListData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnReportListData)
		return soap_closesock(soap);
	ns1__ReturnReportListData->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnReportListData->soap_get(soap, "ns1:ReturnReportListData", "ns1:ReportListDataReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__VoiceDNISList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestVoiceDNISList, ns1__DNISListReturnType *ns1__ReturnVoiceDNISList)
{	struct __ns1__VoiceDNISList soap_tmp___ns1__VoiceDNISList;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/VoiceDNISList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__VoiceDNISList.ns1__RequestVoiceDNISList = ns1__RequestVoiceDNISList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__VoiceDNISList(soap, &soap_tmp___ns1__VoiceDNISList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__VoiceDNISList(soap, &soap_tmp___ns1__VoiceDNISList, "-ns1:VoiceDNISList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__VoiceDNISList(soap, &soap_tmp___ns1__VoiceDNISList, "-ns1:VoiceDNISList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnVoiceDNISList)
		return soap_closesock(soap);
	ns1__ReturnVoiceDNISList->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnVoiceDNISList->soap_get(soap, "ns1:ReturnVoiceDNISList", "ns1:DNISListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__EmailDNISList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__GenRequestType *ns1__RequestEmailDNISList, ns1__DNISListReturnType *ns1__ReturnEmailDNISList)
{	struct __ns1__EmailDNISList soap_tmp___ns1__EmailDNISList;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/EmailDNISList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EmailDNISList.ns1__RequestEmailDNISList = ns1__RequestEmailDNISList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__EmailDNISList(soap, &soap_tmp___ns1__EmailDNISList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EmailDNISList(soap, &soap_tmp___ns1__EmailDNISList, "-ns1:EmailDNISList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EmailDNISList(soap, &soap_tmp___ns1__EmailDNISList, "-ns1:EmailDNISList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnEmailDNISList)
		return soap_closesock(soap);
	ns1__ReturnEmailDNISList->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnEmailDNISList->soap_get(soap, "ns1:ReturnEmailDNISList", "ns1:DNISListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__BriefVoiceDNIS(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__BriefInfoRequestType *ns1__RequestBriefVoiceDNISMatrix, ns1__ReturnMatrixDataTypeBG *ns1__ReturnBriefVoiceDNISMatrix)
{	struct __ns1__BriefVoiceDNIS soap_tmp___ns1__BriefVoiceDNIS;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/BriefVoiceDNIS";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BriefVoiceDNIS.ns1__RequestBriefVoiceDNISMatrix = ns1__RequestBriefVoiceDNISMatrix;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__BriefVoiceDNIS(soap, &soap_tmp___ns1__BriefVoiceDNIS);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BriefVoiceDNIS(soap, &soap_tmp___ns1__BriefVoiceDNIS, "-ns1:BriefVoiceDNIS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BriefVoiceDNIS(soap, &soap_tmp___ns1__BriefVoiceDNIS, "-ns1:BriefVoiceDNIS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnBriefVoiceDNISMatrix)
		return soap_closesock(soap);
	ns1__ReturnBriefVoiceDNISMatrix->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnBriefVoiceDNISMatrix->soap_get(soap, "ns1:ReturnBriefVoiceDNISMatrix", "ns1:ReturnMatrixDataTypeBG");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__BriefEmailDNIS(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__BriefInfoRequestType *ns1__RequestBriefEMailDNISMatrix, ns1__ReturnMatrixDataTypeBG *ns1__ReturnBriefEMailDNISMatrix)
{	struct __ns1__BriefEmailDNIS soap_tmp___ns1__BriefEmailDNIS;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/BriefEmailDNIS";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BriefEmailDNIS.ns1__RequestBriefEMailDNISMatrix = ns1__RequestBriefEMailDNISMatrix;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__BriefEmailDNIS(soap, &soap_tmp___ns1__BriefEmailDNIS);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BriefEmailDNIS(soap, &soap_tmp___ns1__BriefEmailDNIS, "-ns1:BriefEmailDNIS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BriefEmailDNIS(soap, &soap_tmp___ns1__BriefEmailDNIS, "-ns1:BriefEmailDNIS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ReturnBriefEMailDNISMatrix)
		return soap_closesock(soap);
	ns1__ReturnBriefEMailDNISMatrix->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReturnBriefEMailDNISMatrix->soap_get(soap, "ns1:ReturnBriefEMailDNISMatrix", "ns1:ReturnMatrixDataTypeBG");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CommandAgentLoginLogout(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__ACDMultiRequestType *ns1__LoginLogoutRequestAcdComandAgent, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__CommandAgentLoginLogout soap_tmp___ns1__CommandAgentLoginLogout;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/CommandAgentLoginLogout";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CommandAgentLoginLogout.ns1__LoginLogoutRequestAcdComandAgent = ns1__LoginLogoutRequestAcdComandAgent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__CommandAgentLoginLogout(soap, &soap_tmp___ns1__CommandAgentLoginLogout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CommandAgentLoginLogout(soap, &soap_tmp___ns1__CommandAgentLoginLogout, "-ns1:CommandAgentLoginLogout", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CommandAgentLoginLogout(soap, &soap_tmp___ns1__CommandAgentLoginLogout, "-ns1:CommandAgentLoginLogout", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CommandAgentReleaseResume(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__ACDRequestType *ns1__ReleaseResumeRequestAcd, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__CommandAgentReleaseResume soap_tmp___ns1__CommandAgentReleaseResume;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/CommandAgentReleaseResume";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CommandAgentReleaseResume.ns1__ReleaseResumeRequestAcd = ns1__ReleaseResumeRequestAcd;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__CommandAgentReleaseResume(soap, &soap_tmp___ns1__CommandAgentReleaseResume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CommandAgentReleaseResume(soap, &soap_tmp___ns1__CommandAgentReleaseResume, "-ns1:CommandAgentReleaseResume", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CommandAgentReleaseResume(soap, &soap_tmp___ns1__CommandAgentReleaseResume, "-ns1:CommandAgentReleaseResume", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CommandAgentStartChat(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TFRequestType *ns1__StartChatRequestAcd, ns1__ChatResponceType *ns1__StartChatResponce)
{	struct __ns1__CommandAgentStartChat soap_tmp___ns1__CommandAgentStartChat;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/CommandAgentStartChat";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CommandAgentStartChat.ns1__StartChatRequestAcd = ns1__StartChatRequestAcd;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__CommandAgentStartChat(soap, &soap_tmp___ns1__CommandAgentStartChat);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CommandAgentStartChat(soap, &soap_tmp___ns1__CommandAgentStartChat, "-ns1:CommandAgentStartChat", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CommandAgentStartChat(soap, &soap_tmp___ns1__CommandAgentStartChat, "-ns1:CommandAgentStartChat", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__StartChatResponce)
		return soap_closesock(soap);
	ns1__StartChatResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StartChatResponce->soap_get(soap, "ns1:StartChatResponce", "ns1:ChatResponceType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CommandAgentStartRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TFRequestType *ns1__StartRecordRequestAcd, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__CommandAgentStartRecord soap_tmp___ns1__CommandAgentStartRecord;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/CommandAgentStartRecord";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CommandAgentStartRecord.ns1__StartRecordRequestAcd = ns1__StartRecordRequestAcd;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__CommandAgentStartRecord(soap, &soap_tmp___ns1__CommandAgentStartRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CommandAgentStartRecord(soap, &soap_tmp___ns1__CommandAgentStartRecord, "-ns1:CommandAgentStartRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CommandAgentStartRecord(soap, &soap_tmp___ns1__CommandAgentStartRecord, "-ns1:CommandAgentStartRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CommandAgentTelephonyFeatures(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__TFRequestType *ns1__RequestTf, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__CommandAgentTelephonyFeatures soap_tmp___ns1__CommandAgentTelephonyFeatures;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/CommandAgentTelephonyFeatures";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CommandAgentTelephonyFeatures.ns1__RequestTf = ns1__RequestTf;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__CommandAgentTelephonyFeatures(soap, &soap_tmp___ns1__CommandAgentTelephonyFeatures);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CommandAgentTelephonyFeatures(soap, &soap_tmp___ns1__CommandAgentTelephonyFeatures, "-ns1:CommandAgentTelephonyFeatures", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CommandAgentTelephonyFeatures(soap, &soap_tmp___ns1__CommandAgentTelephonyFeatures, "-ns1:CommandAgentTelephonyFeatures", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveWorkspase(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__SaveWorkspaseRequestType *ns1__RequestSaveWorkspase, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__SaveWorkspase soap_tmp___ns1__SaveWorkspase;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/SaveWorkspase";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SaveWorkspase.ns1__RequestSaveWorkspase = ns1__RequestSaveWorkspase;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveWorkspase(soap, &soap_tmp___ns1__SaveWorkspase);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveWorkspase(soap, &soap_tmp___ns1__SaveWorkspase, "-ns1:SaveWorkspase", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveWorkspase(soap, &soap_tmp___ns1__SaveWorkspase, "-ns1:SaveWorkspase", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SaveReport(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RequestSaveReportType *ns1__RequestSaveReport, ns1__ResponceSaveReportType *ns1__ResponceSaveReport)
{	struct __ns1__SaveReport soap_tmp___ns1__SaveReport;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/SaveReport";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SaveReport.ns1__RequestSaveReport = ns1__RequestSaveReport;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__SaveReport(soap, &soap_tmp___ns1__SaveReport);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SaveReport(soap, &soap_tmp___ns1__SaveReport, "-ns1:SaveReport", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SaveReport(soap, &soap_tmp___ns1__SaveReport, "-ns1:SaveReport", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ResponceSaveReport)
		return soap_closesock(soap);
	ns1__ResponceSaveReport->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ResponceSaveReport->soap_get(soap, "ns1:ResponceSaveReport", "ns1:ResponceSaveReportType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteReport(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RequestDeleteReportType *ns1__RequestDeleteReport, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__DeleteReport soap_tmp___ns1__DeleteReport;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/SaveReport";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteReport.ns1__RequestDeleteReport = ns1__RequestDeleteReport;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteReport(soap, &soap_tmp___ns1__DeleteReport);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteReport(soap, &soap_tmp___ns1__DeleteReport, "-ns1:DeleteReport", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteReport(soap, &soap_tmp___ns1__DeleteReport, "-ns1:DeleteReport", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginManagerAgentsPerGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LoginManagerRequestType *ns1__LoginManagerRequestAgents, ns1__GenListReturnType *ns1__LoginManagerResponse)
{	struct __ns1__LoginManagerAgentsPerGroup soap_tmp___ns1__LoginManagerAgentsPerGroup;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/LoginManagerAgentsPerGroup";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginManagerAgentsPerGroup.ns1__LoginManagerRequestAgents = ns1__LoginManagerRequestAgents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginManagerAgentsPerGroup(soap, &soap_tmp___ns1__LoginManagerAgentsPerGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginManagerAgentsPerGroup(soap, &soap_tmp___ns1__LoginManagerAgentsPerGroup, "-ns1:LoginManagerAgentsPerGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoginManagerAgentsPerGroup(soap, &soap_tmp___ns1__LoginManagerAgentsPerGroup, "-ns1:LoginManagerAgentsPerGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__LoginManagerResponse)
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_get(soap, "ns1:LoginManagerResponse", "ns1:GenListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginManagerGroupsPerAgent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LoginManagerRequestType *ns1__LoginManagerRequestGroups, ns1__GenListReturnType *ns1__LoginManagerResponse)
{	struct __ns1__LoginManagerGroupsPerAgent soap_tmp___ns1__LoginManagerGroupsPerAgent;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/LoginManagerGroupsPerAgent";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginManagerGroupsPerAgent.ns1__LoginManagerRequestGroups = ns1__LoginManagerRequestGroups;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginManagerGroupsPerAgent(soap, &soap_tmp___ns1__LoginManagerGroupsPerAgent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginManagerGroupsPerAgent(soap, &soap_tmp___ns1__LoginManagerGroupsPerAgent, "-ns1:LoginManagerGroupsPerAgent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoginManagerGroupsPerAgent(soap, &soap_tmp___ns1__LoginManagerGroupsPerAgent, "-ns1:LoginManagerGroupsPerAgent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__LoginManagerResponse)
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_get(soap, "ns1:LoginManagerResponse", "ns1:GenListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginManagerOneAgentToMultiGroups(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__ACDMultiRequestType *ns1__LoginLogoutRequestAcdOneAgent, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__LoginManagerOneAgentToMultiGroups soap_tmp___ns1__LoginManagerOneAgentToMultiGroups;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/LoginManagerOneAgentToMultiGroups";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginManagerOneAgentToMultiGroups.ns1__LoginLogoutRequestAcdOneAgent = ns1__LoginLogoutRequestAcdOneAgent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginManagerOneAgentToMultiGroups(soap, &soap_tmp___ns1__LoginManagerOneAgentToMultiGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginManagerOneAgentToMultiGroups(soap, &soap_tmp___ns1__LoginManagerOneAgentToMultiGroups, "-ns1:LoginManagerOneAgentToMultiGroups", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoginManagerOneAgentToMultiGroups(soap, &soap_tmp___ns1__LoginManagerOneAgentToMultiGroups, "-ns1:LoginManagerOneAgentToMultiGroups", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginManagerMultiAgentsToOneGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__ACDMultiRequestType *ns1__LoginLogoutRequestAcdMultiAgents, ns1__ResponceInfoHeaderType *ns1__NoDataResponce)
{	struct __ns1__LoginManagerMultiAgentsToOneGroup soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/LoginManagerMultiAgentsToOneGroup";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup.ns1__LoginLogoutRequestAcdMultiAgents = ns1__LoginLogoutRequestAcdMultiAgents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginManagerMultiAgentsToOneGroup(soap, &soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginManagerMultiAgentsToOneGroup(soap, &soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup, "-ns1:LoginManagerMultiAgentsToOneGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoginManagerMultiAgentsToOneGroup(soap, &soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup, "-ns1:LoginManagerMultiAgentsToOneGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__NoDataResponce)
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NoDataResponce->soap_get(soap, "ns1:NoDataResponce", "ns1:ResponceInfoHeaderType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginManagerAvailableAgentsForGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LoginManagerRequestType *ns1__LoginManagerRequestAvailableAgents, ns1__GenListReturnType *ns1__LoginManagerResponse)
{	struct __ns1__LoginManagerAvailableAgentsForGroup soap_tmp___ns1__LoginManagerAvailableAgentsForGroup;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/LoginManagerAvailableAgentsForGroup";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginManagerAvailableAgentsForGroup.ns1__LoginManagerRequestAvailableAgents = ns1__LoginManagerRequestAvailableAgents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginManagerAvailableAgentsForGroup(soap, &soap_tmp___ns1__LoginManagerAvailableAgentsForGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginManagerAvailableAgentsForGroup(soap, &soap_tmp___ns1__LoginManagerAvailableAgentsForGroup, "-ns1:LoginManagerAvailableAgentsForGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoginManagerAvailableAgentsForGroup(soap, &soap_tmp___ns1__LoginManagerAvailableAgentsForGroup, "-ns1:LoginManagerAvailableAgentsForGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__LoginManagerResponse)
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_get(soap, "ns1:LoginManagerResponse", "ns1:GenListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginManagerAvailableGroupsForAgent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LoginManagerRequestType *ns1__LoginManagerRequestAvailableGroups, ns1__GenListReturnType *ns1__LoginManagerResponse)
{	struct __ns1__LoginManagerAvailableGroupsForAgent soap_tmp___ns1__LoginManagerAvailableGroupsForAgent;
	if (!soap_endpoint)
		soap_endpoint = "http://wserv.easyrun.com:9071";
	if (!soap_action)
		soap_action = "urn:EMISweb/LoginManagerAvailableGroupsForAgent";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LoginManagerAvailableGroupsForAgent.ns1__LoginManagerRequestAvailableGroups = ns1__LoginManagerRequestAvailableGroups;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__LoginManagerAvailableGroupsForAgent(soap, &soap_tmp___ns1__LoginManagerAvailableGroupsForAgent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LoginManagerAvailableGroupsForAgent(soap, &soap_tmp___ns1__LoginManagerAvailableGroupsForAgent, "-ns1:LoginManagerAvailableGroupsForAgent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LoginManagerAvailableGroupsForAgent(soap, &soap_tmp___ns1__LoginManagerAvailableGroupsForAgent, "-ns1:LoginManagerAvailableGroupsForAgent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__LoginManagerResponse)
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginManagerResponse->soap_get(soap, "ns1:LoginManagerResponse", "ns1:GenListReturnType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
