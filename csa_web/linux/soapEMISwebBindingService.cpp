/* soapEMISwebBindingService.cpp
   Generated by gSOAP 2.8.52 for emisweb.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

//#include <er_std_override.h>
//#include "er_win_ext.h"
#include "soapEMISwebBindingService.h"

EMISwebBindingService::EMISwebBindingService() : soap(SOAP_IO_DEFAULT)
{
  //this->soap = soap_new();
  this->soap_own = true;
  //char address[20];
  //er_sprintf(address, "%p", this);
  //er_fprintf(stderr, "EMISwebBindingService ctor1 calling EMISwebBindingService_init (%s)\n",address);

  //26-Jul-2021 YR BZ#54709 - EMISwebBindingService_init is called only from CsaWebServer copy ctor
  //EMISwebBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

EMISwebBindingService::EMISwebBindingService(const EMISwebBindingService& rhs)
{
  soap_copy_context(this, &rhs);
  //this->soap = rhs.soap;
  this->soap_own = false;
}

EMISwebBindingService::EMISwebBindingService(const struct soap &_soap) : soap(_soap)
{
  //this->soap = _soap;
  this->soap_own = false;
  //EMISwebBindingService_init(_soap->imode, _soap->omode);
}

EMISwebBindingService::EMISwebBindingService(soap_mode iomode) : soap(iomode)
{
  //this->soap = soap_new();
  this->soap_own = true;
  //char address[20];
  //er_sprintf(address, "%p", this);
  //er_fprintf(stderr, "EMISwebBindingService ctor2 calling EMISwebBindingService_init (%s)\n",address);
  //EMISwebBindingService_init(iomode, iomode);
}

EMISwebBindingService::EMISwebBindingService(soap_mode imode, soap_mode omode) : soap(imode, omode)
{
  //this->soap = soap_new();
  this->soap_own = true;
  //char address[20];
  //er_sprintf(address, "%p", this);
  //er_fprintf(stderr, "EMISwebBindingService ctor3 calling EMISwebBindingService_init (%s)\n",address);
  //EMISwebBindingService_init(imode, omode);
}

EMISwebBindingService::~EMISwebBindingService()
{
  if (this->soap_own)
    this->destroy();
  //soap_free(this->soap);
}

void EMISwebBindingService::EMISwebBindingService_init(soap_mode imode, soap_mode omode)
{	//soap_imode(this->soap, imode);
	soap_imode(this, imode);
	//soap_omode(this->soap, omode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns1", "urn:EMISweb", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	//soap_set_namespaces(this->soap, namespaces);
	soap_set_namespaces(this, namespaces);
}

void EMISwebBindingService::destroy()
{	//soap_destroy(this->soap);
	//soap_end(this->soap);
	//5-Nov-2018 YR BZ#48254
	soap_end(this);
	soap_destroy(this);
}

void EMISwebBindingService::reset()
{	this->destroy();
	//soap_done(this->soap);
	soap_done(this);
	//soap_initialize(this->soap);
	soap_initialize(this);
	EMISwebBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
EMISwebBindingService *EMISwebBindingService::copy()
{	EMISwebBindingService *dup = SOAP_NEW_COPY(EMISwebBindingService(*(struct soap*)this));
	//EMISwebBindingService *dup = SOAP_NEW_COPY(EMISwebBindingService);
	//if (dup)
	//	soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

EMISwebBindingService& EMISwebBindingService::operator=(const EMISwebBindingService& rhs)
{	soap_copy_context(this, &rhs);
	//if (this->soap != rhs.soap)
	//{	if (this->soap_own)
	//		soap_free(this->soap);
	//	this->soap = rhs.soap;
	//	this->soap_own = false;
	//}
	return *this;
}

int EMISwebBindingService::soap_close_socket()
{	//return soap_closesock(this->soap);
	return soap_closesock(this);
}

int EMISwebBindingService::soap_force_close_socket()
{	//return soap_force_closesock(this->soap);
	return soap_force_closesock(this);
}

int EMISwebBindingService::soap_senderfault(const char *string, const char *detailXML)
{	//return ::soap_sender_fault(this->soap, string, detailXML);
	return ::soap_sender_fault(this, string, detailXML);
}

int EMISwebBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	//return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int EMISwebBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	//return ::soap_receiver_fault(this->soap, string, detailXML);
	return ::soap_receiver_fault(this, string, detailXML);
}

int EMISwebBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	//return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void EMISwebBindingService::soap_print_fault(FILE *fd)
{	//::soap_print_fault(this->soap, fd);
	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void EMISwebBindingService::soap_stream_fault(std::ostream& os)
{	//::soap_stream_fault(this->soap, os);
	::soap_stream_fault(this, os);
}
#endif

char *EMISwebBindingService::soap_sprint_fault(char *buf, size_t len)
{	//return ::soap_sprint_fault(this->soap, buf, len);
	return ::soap_sprint_fault(this, buf, len);}
#endif

void EMISwebBindingService::soap_noheader()
{	//this->soap->header = NULL;
	this->header = NULL;}

::SOAP_ENV__Header *EMISwebBindingService::soap_header()
{	//return this->soap->header;
	return this->header;}

#ifndef WITH_NOIO
int EMISwebBindingService::run(int port)
{	//if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
    	//return this->soap->error;
    	return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	//if (this->soap->errnum == 0) // timeout?
			//	this->soap->error = SOAP_OK;
			if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	//return this->soap->error;
	return this->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int EMISwebBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->error;
}
#endif

SOAP_SOCKET EMISwebBindingService::bind(const char *host, int port, int backlog)
{	//return soap_bind(this->soap, host, port, backlog);
	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET EMISwebBindingService::accept()
{	//return soap_accept(this->soap);
	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int EMISwebBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int EMISwebBindingService::serve()
{
#ifndef WITH_FASTCGI
	//this->soap->keep_alive = this->soap->max_keep_alive + 1;
	this->keep_alive = this->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		//if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
		//	this->soap->keep_alive--;
		if (this->keep_alive > 0 && this->max_keep_alive > 0)
			this->keep_alive--;
#endif
		//if (soap_begin_serve(this->soap))
		if (soap_begin_serve(this))
		{	//if (this->soap->error >= SOAP_STOP)
			if (this->error >= SOAP_STOP)
				continue;
			//return this->soap->error;
			return this->error;
		}
		//if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		if ((dispatch() || (this->fserveloop && this->fserveloop(this))) && this->error && this->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			//soap_send_fault(this->soap);
			soap_send_fault(this);
#else
			//return soap_send_fault(this->soap);
			return soap_send_fault(this);
#endif
		}
#ifdef WITH_FASTCGI
		//soap_destroy(this->soap);
		//soap_end(this->soap);
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	//} while (this->soap->keep_alive);
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns1__GroupDetailFullInfo(EMISwebBindingService*);
static int serve___ns1__GroupQueInfo(EMISwebBindingService*);
static int serve___ns1__GroupAgentsInfo(EMISwebBindingService*);
static int serve___ns1__GroupAbndInfo(EMISwebBindingService*);
static int serve___ns1__GroupIntOvfInfo(EMISwebBindingService*);
static int serve___ns1__GroupShiftInfo(EMISwebBindingService*);
static int serve___ns1__GroupGeneralInfo(EMISwebBindingService*);
static int serve___ns1__GroupPeriodInfo(EMISwebBindingService*);
static int serve___ns1__IvrApplInfo(EMISwebBindingService*);
static int serve___ns1__IvrPortInfo(EMISwebBindingService*);
static int serve___ns1__IvrGrpInfo(EMISwebBindingService*);
static int serve___ns1__MailboxInfo(EMISwebBindingService*);
static int serve___ns1__SuperGroupInfo(EMISwebBindingService*);
static int serve___ns1__SuperGroupList(EMISwebBindingService*);
static int serve___ns1__UserLogin(EMISwebBindingService*);
static int serve___ns1__UserLogout(EMISwebBindingService*);
static int serve___ns1__GroupList(EMISwebBindingService*);
static int serve___ns1__IvrPortGroupList(EMISwebBindingService*);
static int serve___ns1__IvrAppList(EMISwebBindingService*);
static int serve___ns1__MailAccList(EMISwebBindingService*);
static int serve___ns1__AgentsPerGroupInfo(EMISwebBindingService*);
static int serve___ns1__AgentsList(EMISwebBindingService*);
static int serve___ns1__BriefAgents(EMISwebBindingService*);
static int serve___ns1__DefaultWorkspace(EMISwebBindingService*);
static int serve___ns1__ReportListData(EMISwebBindingService*);
static int serve___ns1__VoiceDNISList(EMISwebBindingService*);
static int serve___ns1__EmailDNISList(EMISwebBindingService*);
static int serve___ns1__BriefVoiceDNIS(EMISwebBindingService*);
static int serve___ns1__BriefEmailDNIS(EMISwebBindingService*);
static int serve___ns1__CommandAgentLoginLogout(EMISwebBindingService*);
static int serve___ns1__CommandAgentReleaseResume(EMISwebBindingService*);
static int serve___ns1__CommandAgentStartChat(EMISwebBindingService*);
static int serve___ns1__CommandAgentStartRecord(EMISwebBindingService*);
static int serve___ns1__CommandAgentTelephonyFeatures(EMISwebBindingService*);
static int serve___ns1__SaveWorkspase(EMISwebBindingService*);
static int serve___ns1__SaveReport(EMISwebBindingService*);
static int serve___ns1__DeleteReport(EMISwebBindingService*);
static int serve___ns1__LoginManagerAgentsPerGroup(EMISwebBindingService*);
static int serve___ns1__LoginManagerGroupsPerAgent(EMISwebBindingService*);
static int serve___ns1__LoginManagerOneAgentToMultiGroups(EMISwebBindingService*);
static int serve___ns1__LoginManagerMultiAgentsToOneGroup(EMISwebBindingService*);
static int serve___ns1__LoginManagerAvailableAgentsForGroup(EMISwebBindingService*);
static int serve___ns1__LoginManagerAvailableGroupsForAgent(EMISwebBindingService*);
static int serve___ns1__ApplicationRegister(EMISwebBindingService*);
static int serve___ns1__ApplicationKeepAlive(EMISwebBindingService*);
static int serve___ns1__TraceInternalStat(EMISwebBindingService*);
static int serve___ns1__AgentNeedHelp(EMISwebBindingService*);
static int serve___ns1__GroupHourlyInfo(EMISwebBindingService*);
static int serve___ns1__GroupDailyBriefInfo(EMISwebBindingService*);
static int serve___ns1__GroupDailyDetailedInfo(EMISwebBindingService*);
static int serve___ns1__SuperGroupHourlyInfo(EMISwebBindingService*);
static int serve___ns1__SuperGroupDailyBriefInfo(EMISwebBindingService*);

int EMISwebBindingService::dispatch()
{
	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupDetailFullInfo"))
		return serve___ns1__GroupDetailFullInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupQueInfo"))
		return serve___ns1__GroupQueInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupAgentsInfo"))
		return serve___ns1__GroupAgentsInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupAbndInfo"))
		return serve___ns1__GroupAbndInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupIntOvfInfo"))
		return serve___ns1__GroupIntOvfInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupShiftInfo"))
		return serve___ns1__GroupShiftInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupGeneralInfo"))
		return serve___ns1__GroupGeneralInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupPeriodInfo"))
		return serve___ns1__GroupPeriodInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestIvrApplInfo"))
		return serve___ns1__IvrApplInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestIvrPortInfo"))
		return serve___ns1__IvrPortInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestIvrGrpInfo"))
		return serve___ns1__IvrGrpInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestMailboxInfo"))
		return serve___ns1__MailboxInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestSuperGroupInfo"))
		return serve___ns1__SuperGroupInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestSuperGroupList"))
		return serve___ns1__SuperGroupList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestUserLogin"))
		return serve___ns1__UserLogin(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestUserLogout"))
		return serve___ns1__UserLogout(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupList"))
		return serve___ns1__GroupList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestIvrPortGroupList"))
		return serve___ns1__IvrPortGroupList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestIvrAppList"))
		return serve___ns1__IvrAppList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestMailAccList"))
		return serve___ns1__MailAccList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestGroupAgentsMatrix"))
		return serve___ns1__AgentsPerGroupInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestAgentsList"))
		return serve___ns1__AgentsList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestBriefAgentsMatrix"))
		return serve___ns1__BriefAgents(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestDefaultWorkspace"))
		return serve___ns1__DefaultWorkspace(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestReportListData"))
		return serve___ns1__ReportListData(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestVoiceDNISList"))
		return serve___ns1__VoiceDNISList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestEmailDNISList"))
		return serve___ns1__EmailDNISList(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestBriefVoiceDNISMatrix"))
		return serve___ns1__BriefVoiceDNIS(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestBriefEMailDNISMatrix"))
		return serve___ns1__BriefEmailDNIS(this);
	if (!soap_match_tag(this, this->tag, "ns1:LoginLogoutRequestAcdComandAgent"))
		return serve___ns1__CommandAgentLoginLogout(this);
	if (!soap_match_tag(this, this->tag, "ns1:ReleaseResumeRequestAcd"))
		return serve___ns1__CommandAgentReleaseResume(this);
	if (!soap_match_tag(this, this->tag, "ns1:StartChatRequestAcd"))
		return serve___ns1__CommandAgentStartChat(this);
	if (!soap_match_tag(this, this->tag, "ns1:StartRecordRequestAcd"))
		return serve___ns1__CommandAgentStartRecord(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestTf"))
		return serve___ns1__CommandAgentTelephonyFeatures(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestSaveWorkspase"))
		return serve___ns1__SaveWorkspase(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestSaveReport"))
		return serve___ns1__SaveReport(this);
	if (!soap_match_tag(this, this->tag, "ns1:RequestDeleteReport"))
		return serve___ns1__DeleteReport(this);
	if (!soap_match_tag(this, this->tag, "ns1:LoginManagerRequestAgents"))
		return serve___ns1__LoginManagerAgentsPerGroup(this);
	if (!soap_match_tag(this, this->tag, "ns1:LoginManagerRequestGroups"))
		return serve___ns1__LoginManagerGroupsPerAgent(this);
	if (!soap_match_tag(this, this->tag, "ns1:LoginLogoutRequestAcdOneAgent"))
		return serve___ns1__LoginManagerOneAgentToMultiGroups(this);
	if (!soap_match_tag(this, this->tag, "ns1:LoginLogoutRequestAcdMultiAgents"))
		return serve___ns1__LoginManagerMultiAgentsToOneGroup(this);
	if (!soap_match_tag(this, this->tag, "ns1:LoginManagerRequestAvailableAgents"))
		return serve___ns1__LoginManagerAvailableAgentsForGroup(this);
	if (!soap_match_tag(this, this->tag, "ns1:LoginManagerRequestAvailableGroups"))
		return serve___ns1__LoginManagerAvailableGroupsForAgent(this);
	if (!soap_match_tag(this, this->tag, "ns1:ApplicationRegisterRequest"))
		return serve___ns1__ApplicationRegister(this);
	if (!soap_match_tag(this, this->tag, "ns1:ApplicationKeepAliveRequest"))
		return serve___ns1__ApplicationKeepAlive(this);
	if (!soap_match_tag(this, this->tag, "ns1:TraceInternalStatRequest"))
		return serve___ns1__TraceInternalStat(this);
	if (!soap_match_tag(this, this->tag, "ns1:AgentNeedHelpRequest"))
		return serve___ns1__AgentNeedHelp(this);
	if (!soap_match_tag(this, this->tag, "ns1:GroupHourlyInfoRequest"))
		return serve___ns1__GroupHourlyInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:GroupDailyBriefInfoRequest"))
		return serve___ns1__GroupDailyBriefInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:GroupDailyDetailedInfoRequest"))
		return serve___ns1__GroupDailyDetailedInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:SuperGroupHourlyInfoRequest"))
		return serve___ns1__SuperGroupHourlyInfo(this);
	if (!soap_match_tag(this, this->tag, "ns1:SuperGroupDailyBriefInfoRequest"))
		return serve___ns1__SuperGroupDailyBriefInfo(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns1__GroupDetailFullInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupDetailFullInfo soap_tmp___ns1__GroupDetailFullInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupDetailFullInfo;
	ns1__ReturnGroupDetailFullInfo.soap_default(soap);
	soap_default___ns1__GroupDetailFullInfo(soap, &soap_tmp___ns1__GroupDetailFullInfo);
	if (!soap_get___ns1__GroupDetailFullInfo(soap, &soap_tmp___ns1__GroupDetailFullInfo, "-ns1:GroupDetailFullInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupDetailFullInfo(soap_tmp___ns1__GroupDetailFullInfo.ns1__RequestGroupDetailFullInfo, ns1__ReturnGroupDetailFullInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupDetailFullInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupDetailFullInfo.soap_put(soap, "ns1:ReturnGroupDetailFullInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupDetailFullInfo.soap_put(soap, "ns1:ReturnGroupDetailFullInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupDetailFullInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupDetailFullInfo.ns1__RequestGroupDetailFullInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupDetailFullInfo.ns1__RequestGroupDetailFullInfo;
	return soap_closesock(soap);
}

static int serve___ns1__GroupQueInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupQueInfo soap_tmp___ns1__GroupQueInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupQueInfo;
	ns1__ReturnGroupQueInfo.soap_default(soap);
	soap_default___ns1__GroupQueInfo(soap, &soap_tmp___ns1__GroupQueInfo);
	if (!soap_get___ns1__GroupQueInfo(soap, &soap_tmp___ns1__GroupQueInfo, "-ns1:GroupQueInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupQueInfo(soap_tmp___ns1__GroupQueInfo.ns1__RequestGroupQueInfo, ns1__ReturnGroupQueInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupQueInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupQueInfo.soap_put(soap, "ns1:ReturnGroupQueInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupQueInfo.soap_put(soap, "ns1:ReturnGroupQueInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupQueInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupQueInfo.ns1__RequestGroupQueInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupQueInfo.ns1__RequestGroupQueInfo;
	return soap_closesock(soap);
}

static int serve___ns1__GroupAgentsInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupAgentsInfo soap_tmp___ns1__GroupAgentsInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupAgentsInfo;
	ns1__ReturnGroupAgentsInfo.soap_default(soap);
	soap_default___ns1__GroupAgentsInfo(soap, &soap_tmp___ns1__GroupAgentsInfo);
	if (!soap_get___ns1__GroupAgentsInfo(soap, &soap_tmp___ns1__GroupAgentsInfo, "-ns1:GroupAgentsInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupAgentsInfo(soap_tmp___ns1__GroupAgentsInfo.ns1__RequestGroupAgentsInfo, ns1__ReturnGroupAgentsInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupAgentsInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupAgentsInfo.soap_put(soap, "ns1:ReturnGroupAgentsInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupAgentsInfo.soap_put(soap, "ns1:ReturnGroupAgentsInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupAgentsInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupAgentsInfo.ns1__RequestGroupAgentsInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupAgentsInfo.ns1__RequestGroupAgentsInfo;
	return soap_closesock(soap);
}

static int serve___ns1__GroupAbndInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupAbndInfo soap_tmp___ns1__GroupAbndInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupAbndInfo;
	ns1__ReturnGroupAbndInfo.soap_default(soap);
	soap_default___ns1__GroupAbndInfo(soap, &soap_tmp___ns1__GroupAbndInfo);
	if (!soap_get___ns1__GroupAbndInfo(soap, &soap_tmp___ns1__GroupAbndInfo, "-ns1:GroupAbndInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupAbndInfo(soap_tmp___ns1__GroupAbndInfo.ns1__RequestGroupAbndInfo, ns1__ReturnGroupAbndInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupAbndInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupAbndInfo.soap_put(soap, "ns1:ReturnGroupAbndInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupAbndInfo.soap_put(soap, "ns1:ReturnGroupAbndInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupAbndInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupAbndInfo.ns1__RequestGroupAbndInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupAbndInfo.ns1__RequestGroupAbndInfo;
	return soap_closesock(soap);
}

static int serve___ns1__GroupIntOvfInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupIntOvfInfo soap_tmp___ns1__GroupIntOvfInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupIntOvfInfo;
	ns1__ReturnGroupIntOvfInfo.soap_default(soap);
	soap_default___ns1__GroupIntOvfInfo(soap, &soap_tmp___ns1__GroupIntOvfInfo);
	if (!soap_get___ns1__GroupIntOvfInfo(soap, &soap_tmp___ns1__GroupIntOvfInfo, "-ns1:GroupIntOvfInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupIntOvfInfo(soap_tmp___ns1__GroupIntOvfInfo.ns1__RequestGroupIntOvfInfo, ns1__ReturnGroupIntOvfInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupIntOvfInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupIntOvfInfo.soap_put(soap, "ns1:ReturnGroupIntOvfInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupIntOvfInfo.soap_put(soap, "ns1:ReturnGroupIntOvfInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupIntOvfInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupIntOvfInfo.ns1__RequestGroupIntOvfInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupIntOvfInfo.ns1__RequestGroupIntOvfInfo;
	return soap_closesock(soap);
}

static int serve___ns1__GroupShiftInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupShiftInfo soap_tmp___ns1__GroupShiftInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupShiftInfo;
	ns1__ReturnGroupShiftInfo.soap_default(soap);
	soap_default___ns1__GroupShiftInfo(soap, &soap_tmp___ns1__GroupShiftInfo);
	if (!soap_get___ns1__GroupShiftInfo(soap, &soap_tmp___ns1__GroupShiftInfo, "-ns1:GroupShiftInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupShiftInfo(soap_tmp___ns1__GroupShiftInfo.ns1__RequestGroupShiftInfo, ns1__ReturnGroupShiftInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupShiftInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupShiftInfo.soap_put(soap, "ns1:ReturnGroupShiftInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupShiftInfo.soap_put(soap, "ns1:ReturnGroupShiftInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupShiftInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupShiftInfo.ns1__RequestGroupShiftInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupShiftInfo.ns1__RequestGroupShiftInfo;
	return soap_closesock(soap);
}

static int serve___ns1__GroupGeneralInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupGeneralInfo soap_tmp___ns1__GroupGeneralInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupGeneralInfo;
	ns1__ReturnGroupGeneralInfo.soap_default(soap);
	soap_default___ns1__GroupGeneralInfo(soap, &soap_tmp___ns1__GroupGeneralInfo);
	if (!soap_get___ns1__GroupGeneralInfo(soap, &soap_tmp___ns1__GroupGeneralInfo, "-ns1:GroupGeneralInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupGeneralInfo(soap_tmp___ns1__GroupGeneralInfo.ns1__RequestGroupGeneralInfo, ns1__ReturnGroupGeneralInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupGeneralInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupGeneralInfo.soap_put(soap, "ns1:ReturnGroupGeneralInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupGeneralInfo.soap_put(soap, "ns1:ReturnGroupGeneralInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupGeneralInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupGeneralInfo.ns1__RequestGroupGeneralInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupGeneralInfo.ns1__RequestGroupGeneralInfo;
	return soap_closesock(soap);
}

static int serve___ns1__GroupPeriodInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupPeriodInfo soap_tmp___ns1__GroupPeriodInfo;
	ns1__ReturnArrayDataType ns1__ReturnGroupPeriodInfo;
	ns1__ReturnGroupPeriodInfo.soap_default(soap);
	soap_default___ns1__GroupPeriodInfo(soap, &soap_tmp___ns1__GroupPeriodInfo);
	if (!soap_get___ns1__GroupPeriodInfo(soap, &soap_tmp___ns1__GroupPeriodInfo, "-ns1:GroupPeriodInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupPeriodInfo(soap_tmp___ns1__GroupPeriodInfo.ns1__RequestGroupPeriodInfo, ns1__ReturnGroupPeriodInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupPeriodInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupPeriodInfo.soap_put(soap, "ns1:ReturnGroupPeriodInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupPeriodInfo.soap_put(soap, "ns1:ReturnGroupPeriodInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupPeriodInfo.soap_dealloc();
    delete soap_tmp___ns1__GroupPeriodInfo.ns1__RequestGroupPeriodInfo->requestInfoHeader;
    delete soap_tmp___ns1__GroupPeriodInfo.ns1__RequestGroupPeriodInfo;
	return soap_closesock(soap);
}

static int serve___ns1__IvrApplInfo(EMISwebBindingService *soap)
{	struct __ns1__IvrApplInfo soap_tmp___ns1__IvrApplInfo;
	ns1__ReturnArrayDataType ns1__ReturnIvrApplInfo;
	ns1__ReturnIvrApplInfo.soap_default(soap);
	soap_default___ns1__IvrApplInfo(soap, &soap_tmp___ns1__IvrApplInfo);
	if (!soap_get___ns1__IvrApplInfo(soap, &soap_tmp___ns1__IvrApplInfo, "-ns1:IvrApplInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->IvrApplInfo(soap_tmp___ns1__IvrApplInfo.ns1__RequestIvrApplInfo, ns1__ReturnIvrApplInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnIvrApplInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnIvrApplInfo.soap_put(soap, "ns1:ReturnIvrApplInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnIvrApplInfo.soap_put(soap, "ns1:ReturnIvrApplInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnIvrApplInfo.soap_dealloc();
    delete soap_tmp___ns1__IvrApplInfo.ns1__RequestIvrApplInfo->requestInfoHeader;
    delete soap_tmp___ns1__IvrApplInfo.ns1__RequestIvrApplInfo;
	return soap_closesock(soap);
}

static int serve___ns1__IvrPortInfo(EMISwebBindingService *soap)
{	struct __ns1__IvrPortInfo soap_tmp___ns1__IvrPortInfo;
	ns1__ReturnArrayDataType ns1__ReturnIvrPortInfo;
	ns1__ReturnIvrPortInfo.soap_default(soap);
	soap_default___ns1__IvrPortInfo(soap, &soap_tmp___ns1__IvrPortInfo);
	if (!soap_get___ns1__IvrPortInfo(soap, &soap_tmp___ns1__IvrPortInfo, "-ns1:IvrPortInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->IvrPortInfo(soap_tmp___ns1__IvrPortInfo.ns1__RequestIvrPortInfo, ns1__ReturnIvrPortInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnIvrPortInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnIvrPortInfo.soap_put(soap, "ns1:ReturnIvrPortInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnIvrPortInfo.soap_put(soap, "ns1:ReturnIvrPortInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnIvrPortInfo.soap_dealloc();
    delete soap_tmp___ns1__IvrPortInfo.ns1__RequestIvrPortInfo->requestInfoHeader;
    delete soap_tmp___ns1__IvrPortInfo.ns1__RequestIvrPortInfo;
	return soap_closesock(soap);
}

static int serve___ns1__IvrGrpInfo(EMISwebBindingService *soap)
{	struct __ns1__IvrGrpInfo soap_tmp___ns1__IvrGrpInfo;
	ns1__ReturnArrayDataType ns1__ReturnIvrGrpInfo;
	ns1__ReturnIvrGrpInfo.soap_default(soap);
	soap_default___ns1__IvrGrpInfo(soap, &soap_tmp___ns1__IvrGrpInfo);
	if (!soap_get___ns1__IvrGrpInfo(soap, &soap_tmp___ns1__IvrGrpInfo, "-ns1:IvrGrpInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->IvrGrpInfo(soap_tmp___ns1__IvrGrpInfo.ns1__RequestIvrGrpInfo, ns1__ReturnIvrGrpInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnIvrGrpInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnIvrGrpInfo.soap_put(soap, "ns1:ReturnIvrGrpInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnIvrGrpInfo.soap_put(soap, "ns1:ReturnIvrGrpInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnIvrGrpInfo.soap_dealloc();
    delete soap_tmp___ns1__IvrGrpInfo.ns1__RequestIvrGrpInfo->requestInfoHeader;
    delete soap_tmp___ns1__IvrGrpInfo.ns1__RequestIvrGrpInfo;
	return soap_closesock(soap);
}

static int serve___ns1__MailboxInfo(EMISwebBindingService *soap)
{	struct __ns1__MailboxInfo soap_tmp___ns1__MailboxInfo;
	ns1__ReturnArrayDataType ns1__ReturnMailboxInfo;
	ns1__ReturnMailboxInfo.soap_default(soap);
	soap_default___ns1__MailboxInfo(soap, &soap_tmp___ns1__MailboxInfo);
	if (!soap_get___ns1__MailboxInfo(soap, &soap_tmp___ns1__MailboxInfo, "-ns1:MailboxInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->MailboxInfo(soap_tmp___ns1__MailboxInfo.ns1__RequestMailboxInfo, ns1__ReturnMailboxInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnMailboxInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnMailboxInfo.soap_put(soap, "ns1:ReturnMailboxInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnMailboxInfo.soap_put(soap, "ns1:ReturnMailboxInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnMailboxInfo.soap_dealloc();
    delete soap_tmp___ns1__MailboxInfo.ns1__RequestMailboxInfo->requestInfoHeader;
    delete soap_tmp___ns1__MailboxInfo.ns1__RequestMailboxInfo;
	return soap_closesock(soap);
}

static int serve___ns1__SuperGroupInfo(EMISwebBindingService *soap)
{	struct __ns1__SuperGroupInfo soap_tmp___ns1__SuperGroupInfo;
	ns1__ReturnArrayDataType ns1__ReturnSuperGroupInfo;
	ns1__ReturnSuperGroupInfo.soap_default(soap);
	soap_default___ns1__SuperGroupInfo(soap, &soap_tmp___ns1__SuperGroupInfo);
	if (!soap_get___ns1__SuperGroupInfo(soap, &soap_tmp___ns1__SuperGroupInfo, "-ns1:SuperGroupInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SuperGroupInfo(soap_tmp___ns1__SuperGroupInfo.ns1__RequestSuperGroupInfo, ns1__ReturnSuperGroupInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnSuperGroupInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnSuperGroupInfo.soap_put(soap, "ns1:ReturnSuperGroupInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnSuperGroupInfo.soap_put(soap, "ns1:ReturnSuperGroupInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnSuperGroupInfo.soap_dealloc();
    delete soap_tmp___ns1__SuperGroupInfo.ns1__RequestSuperGroupInfo->requestInfoHeader;
    delete soap_tmp___ns1__SuperGroupInfo.ns1__RequestSuperGroupInfo;

	return soap_closesock(soap);
}

static int serve___ns1__SuperGroupList(EMISwebBindingService *soap)
{	struct __ns1__SuperGroupList soap_tmp___ns1__SuperGroupList;
	ns1__SuperGroupListReturnType ns1__ReturnSuperGroupList;
	ns1__ReturnSuperGroupList.soap_default(soap);
	soap_default___ns1__SuperGroupList(soap, &soap_tmp___ns1__SuperGroupList);
	if (!soap_get___ns1__SuperGroupList(soap, &soap_tmp___ns1__SuperGroupList, "-ns1:SuperGroupList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SuperGroupList(soap_tmp___ns1__SuperGroupList.ns1__RequestSuperGroupList, ns1__ReturnSuperGroupList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnSuperGroupList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnSuperGroupList.soap_put(soap, "ns1:ReturnSuperGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnSuperGroupList.soap_put(soap, "ns1:ReturnSuperGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    //1-Jun-2021 YR BZ#54502
    ns1__ReturnSuperGroupList.soap_dealloc();
    delete soap_tmp___ns1__SuperGroupList.ns1__RequestSuperGroupList->requestInfoHeader;
    delete soap_tmp___ns1__SuperGroupList.ns1__RequestSuperGroupList;
	return soap_closesock(soap);
}

static int serve___ns1__UserLogin(EMISwebBindingService *soap)
{	struct __ns1__UserLogin soap_tmp___ns1__UserLogin;
	ns1__LoginReturnType ns1__ReturnUserLogin;
	ns1__ReturnUserLogin.soap_default(soap);
	soap_default___ns1__UserLogin(soap, &soap_tmp___ns1__UserLogin);
	if (!soap_get___ns1__UserLogin(soap, &soap_tmp___ns1__UserLogin, "-ns1:UserLogin", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserLogin(soap_tmp___ns1__UserLogin.ns1__RequestUserLogin, ns1__ReturnUserLogin);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnUserLogin.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnUserLogin.soap_put(soap, "ns1:ReturnUserLogin", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnUserLogin.soap_put(soap, "ns1:ReturnUserLogin", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__UserLogin.ns1__RequestUserLogin;
	return soap_closesock(soap);
}

static int serve___ns1__UserLogout(EMISwebBindingService *soap)
{	struct __ns1__UserLogout soap_tmp___ns1__UserLogout;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__UserLogout(soap, &soap_tmp___ns1__UserLogout);
	if (!soap_get___ns1__UserLogout(soap, &soap_tmp___ns1__UserLogout, "-ns1:UserLogout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UserLogout(soap_tmp___ns1__UserLogout.ns1__RequestUserLogout, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__UserLogout.ns1__RequestUserLogout->requestInfoHeader;
    delete soap_tmp___ns1__UserLogout.ns1__RequestUserLogout;
	return soap_closesock(soap);
}

static int serve___ns1__GroupList(EMISwebBindingService *soap)
{	struct __ns1__GroupList soap_tmp___ns1__GroupList;
	ns1__GroupListReturnType ns1__ReturnGroupList;
	ns1__ReturnGroupList.soap_default(soap);
	soap_default___ns1__GroupList(soap, &soap_tmp___ns1__GroupList);
	if (!soap_get___ns1__GroupList(soap, &soap_tmp___ns1__GroupList, "-ns1:GroupList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupList(soap_tmp___ns1__GroupList.ns1__RequestGroupList, ns1__ReturnGroupList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupList.soap_put(soap, "ns1:ReturnGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupList.soap_put(soap, "ns1:ReturnGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupList.soap_dealloc();
    delete soap_tmp___ns1__GroupList.ns1__RequestGroupList->requestInfoHeader;
    delete soap_tmp___ns1__GroupList.ns1__RequestGroupList;
	return soap_closesock(soap);
}

static int serve___ns1__IvrPortGroupList(EMISwebBindingService *soap)
{	struct __ns1__IvrPortGroupList soap_tmp___ns1__IvrPortGroupList;
	ns1__GenListReturnType ns1__ReturnIvrPortGroupList;
	ns1__ReturnIvrPortGroupList.soap_default(soap);
	soap_default___ns1__IvrPortGroupList(soap, &soap_tmp___ns1__IvrPortGroupList);
	if (!soap_get___ns1__IvrPortGroupList(soap, &soap_tmp___ns1__IvrPortGroupList, "-ns1:IvrPortGroupList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->IvrPortGroupList(soap_tmp___ns1__IvrPortGroupList.ns1__RequestIvrPortGroupList, ns1__ReturnIvrPortGroupList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnIvrPortGroupList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnIvrPortGroupList.soap_put(soap, "ns1:ReturnIvrPortGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnIvrPortGroupList.soap_put(soap, "ns1:ReturnIvrPortGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnIvrPortGroupList.soap_dealloc();
    delete soap_tmp___ns1__IvrPortGroupList.ns1__RequestIvrPortGroupList->requestInfoHeader;
    delete soap_tmp___ns1__IvrPortGroupList.ns1__RequestIvrPortGroupList;
	return soap_closesock(soap);
}

static int serve___ns1__IvrAppList(EMISwebBindingService *soap)
{	struct __ns1__IvrAppList soap_tmp___ns1__IvrAppList;
	ns1__GenListReturnType ns1__ReturnIvrAppList;
	ns1__ReturnIvrAppList.soap_default(soap);
	soap_default___ns1__IvrAppList(soap, &soap_tmp___ns1__IvrAppList);
	if (!soap_get___ns1__IvrAppList(soap, &soap_tmp___ns1__IvrAppList, "-ns1:IvrAppList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->IvrAppList(soap_tmp___ns1__IvrAppList.ns1__RequestIvrAppList, ns1__ReturnIvrAppList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnIvrAppList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnIvrAppList.soap_put(soap, "ns1:ReturnIvrAppList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnIvrAppList.soap_put(soap, "ns1:ReturnIvrAppList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnIvrAppList.soap_dealloc();
    delete soap_tmp___ns1__IvrAppList.ns1__RequestIvrAppList->requestInfoHeader;
    delete soap_tmp___ns1__IvrAppList.ns1__RequestIvrAppList;
	return soap_closesock(soap);
}

static int serve___ns1__MailAccList(EMISwebBindingService *soap)
{	struct __ns1__MailAccList soap_tmp___ns1__MailAccList;
	ns1__GenListReturnType ns1__ReturnMailAccList;
	ns1__ReturnMailAccList.soap_default(soap);
	soap_default___ns1__MailAccList(soap, &soap_tmp___ns1__MailAccList);
	if (!soap_get___ns1__MailAccList(soap, &soap_tmp___ns1__MailAccList, "-ns1:MailAccList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->MailAccList(soap_tmp___ns1__MailAccList.ns1__RequestMailAccList, ns1__ReturnMailAccList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnMailAccList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnMailAccList.soap_put(soap, "ns1:ReturnMailAccList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnMailAccList.soap_put(soap, "ns1:ReturnMailAccList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnMailAccList.soap_dealloc();
    delete soap_tmp___ns1__MailAccList.ns1__RequestMailAccList->requestInfoHeader;
    delete soap_tmp___ns1__MailAccList.ns1__RequestMailAccList;
	return soap_closesock(soap);
}

static int serve___ns1__AgentsPerGroupInfo(EMISwebBindingService *soap)
{	struct __ns1__AgentsPerGroupInfo soap_tmp___ns1__AgentsPerGroupInfo;
	ns1__ReturnMatrixDataTypePerGroup ns1__ReturnGroupAgentsMatrix;
	ns1__ReturnGroupAgentsMatrix.soap_default(soap);
	soap_default___ns1__AgentsPerGroupInfo(soap, &soap_tmp___ns1__AgentsPerGroupInfo);
	if (!soap_get___ns1__AgentsPerGroupInfo(soap, &soap_tmp___ns1__AgentsPerGroupInfo, "-ns1:AgentsPerGroupInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AgentsPerGroupInfo(soap_tmp___ns1__AgentsPerGroupInfo.ns1__RequestGroupAgentsMatrix, ns1__ReturnGroupAgentsMatrix);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnGroupAgentsMatrix.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnGroupAgentsMatrix.soap_put(soap, "ns1:ReturnGroupAgentsMatrix", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnGroupAgentsMatrix.soap_put(soap, "ns1:ReturnGroupAgentsMatrix", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnGroupAgentsMatrix.soap_dealloc();
    delete soap_tmp___ns1__AgentsPerGroupInfo.ns1__RequestGroupAgentsMatrix->requestInfoHeader;
    delete soap_tmp___ns1__AgentsPerGroupInfo.ns1__RequestGroupAgentsMatrix;
	return soap_closesock(soap);
}

static int serve___ns1__AgentsList(EMISwebBindingService *soap)
{	struct __ns1__AgentsList soap_tmp___ns1__AgentsList;
	ns1__AgentsListReturnType ns1__ReturnAgentsList;
	ns1__ReturnAgentsList.soap_default(soap);
	soap_default___ns1__AgentsList(soap, &soap_tmp___ns1__AgentsList);
	if (!soap_get___ns1__AgentsList(soap, &soap_tmp___ns1__AgentsList, "-ns1:AgentsList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AgentsList(soap_tmp___ns1__AgentsList.ns1__RequestAgentsList, ns1__ReturnAgentsList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnAgentsList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnAgentsList.soap_put(soap, "ns1:ReturnAgentsList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnAgentsList.soap_put(soap, "ns1:ReturnAgentsList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnAgentsList.soap_dealloc();
    delete soap_tmp___ns1__AgentsList.ns1__RequestAgentsList->requestInfoHeader;
    delete soap_tmp___ns1__AgentsList.ns1__RequestAgentsList;
	return soap_closesock(soap);
}

static int serve___ns1__BriefAgents(EMISwebBindingService *soap)
{	struct __ns1__BriefAgents soap_tmp___ns1__BriefAgents;
	ns1__ReturnMatrixDataTypeBG ns1__ReturnBriefAgentsMatrix;
	ns1__ReturnBriefAgentsMatrix.soap_default(soap);
	soap_default___ns1__BriefAgents(soap, &soap_tmp___ns1__BriefAgents);
	if (!soap_get___ns1__BriefAgents(soap, &soap_tmp___ns1__BriefAgents, "-ns1:BriefAgents", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BriefAgents(soap_tmp___ns1__BriefAgents.ns1__RequestBriefAgentsMatrix, ns1__ReturnBriefAgentsMatrix);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnBriefAgentsMatrix.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnBriefAgentsMatrix.soap_put(soap, "ns1:ReturnBriefAgentsMatrix", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnBriefAgentsMatrix.soap_put(soap, "ns1:ReturnBriefAgentsMatrix", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnBriefAgentsMatrix.soap_dealloc();
    delete soap_tmp___ns1__BriefAgents.ns1__RequestBriefAgentsMatrix->requestInfoHeader;
    delete soap_tmp___ns1__BriefAgents.ns1__RequestBriefAgentsMatrix;
	return soap_closesock(soap);
}

static int serve___ns1__DefaultWorkspace(EMISwebBindingService *soap)
{	struct __ns1__DefaultWorkspace soap_tmp___ns1__DefaultWorkspace;
	ns1__DefaultWorkspaceReturnType ns1__ReturnDefaultWorkspace;
	ns1__ReturnDefaultWorkspace.soap_default(soap);
	soap_default___ns1__DefaultWorkspace(soap, &soap_tmp___ns1__DefaultWorkspace);
	if (!soap_get___ns1__DefaultWorkspace(soap, &soap_tmp___ns1__DefaultWorkspace, "-ns1:DefaultWorkspace", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DefaultWorkspace(soap_tmp___ns1__DefaultWorkspace.ns1__RequestDefaultWorkspace, ns1__ReturnDefaultWorkspace);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnDefaultWorkspace.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnDefaultWorkspace.soap_put(soap, "ns1:ReturnDefaultWorkspace", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnDefaultWorkspace.soap_put(soap, "ns1:ReturnDefaultWorkspace", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnDefaultWorkspace.soap_dealloc();
    delete soap_tmp___ns1__DefaultWorkspace.ns1__RequestDefaultWorkspace->requestInfoHeader;
    delete soap_tmp___ns1__DefaultWorkspace.ns1__RequestDefaultWorkspace;
	return soap_closesock(soap);
}

static int serve___ns1__ReportListData(EMISwebBindingService *soap)
{	struct __ns1__ReportListData soap_tmp___ns1__ReportListData;
	ns1__ReportListDataReturnType ns1__ReturnReportListData;
	ns1__ReturnReportListData.soap_default(soap);
	soap_default___ns1__ReportListData(soap, &soap_tmp___ns1__ReportListData);
	if (!soap_get___ns1__ReportListData(soap, &soap_tmp___ns1__ReportListData, "-ns1:ReportListData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ReportListData(soap_tmp___ns1__ReportListData.ns1__RequestReportListData, ns1__ReturnReportListData);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnReportListData.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnReportListData.soap_put(soap, "ns1:ReturnReportListData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnReportListData.soap_put(soap, "ns1:ReturnReportListData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnReportListData.soap_dealloc();
    delete soap_tmp___ns1__ReportListData.ns1__RequestReportListData->requestInfoHeader;
    delete soap_tmp___ns1__ReportListData.ns1__RequestReportListData;
	return soap_closesock(soap);
}

static int serve___ns1__VoiceDNISList(EMISwebBindingService *soap)
{	struct __ns1__VoiceDNISList soap_tmp___ns1__VoiceDNISList;
	ns1__DNISListReturnType ns1__ReturnVoiceDNISList;
	ns1__ReturnVoiceDNISList.soap_default(soap);
	soap_default___ns1__VoiceDNISList(soap, &soap_tmp___ns1__VoiceDNISList);
	if (!soap_get___ns1__VoiceDNISList(soap, &soap_tmp___ns1__VoiceDNISList, "-ns1:VoiceDNISList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->VoiceDNISList(soap_tmp___ns1__VoiceDNISList.ns1__RequestVoiceDNISList, ns1__ReturnVoiceDNISList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnVoiceDNISList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnVoiceDNISList.soap_put(soap, "ns1:ReturnVoiceDNISList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnVoiceDNISList.soap_put(soap, "ns1:ReturnVoiceDNISList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnVoiceDNISList.soap_dealloc();
    delete soap_tmp___ns1__VoiceDNISList.ns1__RequestVoiceDNISList->requestInfoHeader;
    delete soap_tmp___ns1__VoiceDNISList.ns1__RequestVoiceDNISList;
	return soap_closesock(soap);
}

static int serve___ns1__EmailDNISList(EMISwebBindingService *soap)
{	struct __ns1__EmailDNISList soap_tmp___ns1__EmailDNISList;
	ns1__DNISListReturnType ns1__ReturnEmailDNISList;
	ns1__ReturnEmailDNISList.soap_default(soap);
	soap_default___ns1__EmailDNISList(soap, &soap_tmp___ns1__EmailDNISList);
	if (!soap_get___ns1__EmailDNISList(soap, &soap_tmp___ns1__EmailDNISList, "-ns1:EmailDNISList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->EmailDNISList(soap_tmp___ns1__EmailDNISList.ns1__RequestEmailDNISList, ns1__ReturnEmailDNISList);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnEmailDNISList.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnEmailDNISList.soap_put(soap, "ns1:ReturnEmailDNISList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnEmailDNISList.soap_put(soap, "ns1:ReturnEmailDNISList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnEmailDNISList.soap_dealloc();
    delete soap_tmp___ns1__EmailDNISList.ns1__RequestEmailDNISList->requestInfoHeader;
    delete soap_tmp___ns1__EmailDNISList.ns1__RequestEmailDNISList;
	return soap_closesock(soap);
}

static int serve___ns1__BriefVoiceDNIS(EMISwebBindingService *soap)
{	struct __ns1__BriefVoiceDNIS soap_tmp___ns1__BriefVoiceDNIS;
	ns1__ReturnMatrixDataTypeBG ns1__ReturnBriefVoiceDNISMatrix;
	ns1__ReturnBriefVoiceDNISMatrix.soap_default(soap);
	soap_default___ns1__BriefVoiceDNIS(soap, &soap_tmp___ns1__BriefVoiceDNIS);
	if (!soap_get___ns1__BriefVoiceDNIS(soap, &soap_tmp___ns1__BriefVoiceDNIS, "-ns1:BriefVoiceDNIS", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BriefVoiceDNIS(soap_tmp___ns1__BriefVoiceDNIS.ns1__RequestBriefVoiceDNISMatrix, ns1__ReturnBriefVoiceDNISMatrix);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnBriefVoiceDNISMatrix.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnBriefVoiceDNISMatrix.soap_put(soap, "ns1:ReturnBriefVoiceDNISMatrix", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnBriefVoiceDNISMatrix.soap_put(soap, "ns1:ReturnBriefVoiceDNISMatrix", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnBriefVoiceDNISMatrix.soap_dealloc();
    delete soap_tmp___ns1__BriefVoiceDNIS.ns1__RequestBriefVoiceDNISMatrix->requestInfoHeader;
    delete soap_tmp___ns1__BriefVoiceDNIS.ns1__RequestBriefVoiceDNISMatrix;
	return soap_closesock(soap);
}

static int serve___ns1__BriefEmailDNIS(EMISwebBindingService *soap)
{	struct __ns1__BriefEmailDNIS soap_tmp___ns1__BriefEmailDNIS;
	ns1__ReturnMatrixDataTypeBG ns1__ReturnBriefEMailDNISMatrix;
	ns1__ReturnBriefEMailDNISMatrix.soap_default(soap);
	soap_default___ns1__BriefEmailDNIS(soap, &soap_tmp___ns1__BriefEmailDNIS);
	if (!soap_get___ns1__BriefEmailDNIS(soap, &soap_tmp___ns1__BriefEmailDNIS, "-ns1:BriefEmailDNIS", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BriefEmailDNIS(soap_tmp___ns1__BriefEmailDNIS.ns1__RequestBriefEMailDNISMatrix, ns1__ReturnBriefEMailDNISMatrix);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ReturnBriefEMailDNISMatrix.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ReturnBriefEMailDNISMatrix.soap_put(soap, "ns1:ReturnBriefEMailDNISMatrix", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ReturnBriefEMailDNISMatrix.soap_put(soap, "ns1:ReturnBriefEMailDNISMatrix", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__ReturnBriefEMailDNISMatrix.soap_dealloc();
    delete soap_tmp___ns1__BriefEmailDNIS.ns1__RequestBriefEMailDNISMatrix->requestInfoHeader;
    delete soap_tmp___ns1__BriefEmailDNIS.ns1__RequestBriefEMailDNISMatrix;
	return soap_closesock(soap);
}

static int serve___ns1__CommandAgentLoginLogout(EMISwebBindingService *soap)
{	struct __ns1__CommandAgentLoginLogout soap_tmp___ns1__CommandAgentLoginLogout;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__CommandAgentLoginLogout(soap, &soap_tmp___ns1__CommandAgentLoginLogout);
	if (!soap_get___ns1__CommandAgentLoginLogout(soap, &soap_tmp___ns1__CommandAgentLoginLogout, "-ns1:CommandAgentLoginLogout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CommandAgentLoginLogout(soap_tmp___ns1__CommandAgentLoginLogout.ns1__LoginLogoutRequestAcdComandAgent, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__CommandAgentLoginLogout.ns1__LoginLogoutRequestAcdComandAgent->requestInfoHeader;
    delete soap_tmp___ns1__CommandAgentLoginLogout.ns1__LoginLogoutRequestAcdComandAgent;
	return soap_closesock(soap);
}

static int serve___ns1__CommandAgentReleaseResume(EMISwebBindingService *soap)
{	struct __ns1__CommandAgentReleaseResume soap_tmp___ns1__CommandAgentReleaseResume;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__CommandAgentReleaseResume(soap, &soap_tmp___ns1__CommandAgentReleaseResume);
	if (!soap_get___ns1__CommandAgentReleaseResume(soap, &soap_tmp___ns1__CommandAgentReleaseResume, "-ns1:CommandAgentReleaseResume", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CommandAgentReleaseResume(soap_tmp___ns1__CommandAgentReleaseResume.ns1__ReleaseResumeRequestAcd, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__CommandAgentReleaseResume.ns1__ReleaseResumeRequestAcd->requestInfoHeader;
    delete soap_tmp___ns1__CommandAgentReleaseResume.ns1__ReleaseResumeRequestAcd;
	return soap_closesock(soap);
}

static int serve___ns1__CommandAgentStartChat(EMISwebBindingService *soap)
{	struct __ns1__CommandAgentStartChat soap_tmp___ns1__CommandAgentStartChat;
	ns1__ChatResponseType ns1__StartChatResponse;
	ns1__StartChatResponse.soap_default(soap);
	soap_default___ns1__CommandAgentStartChat(soap, &soap_tmp___ns1__CommandAgentStartChat);
	if (!soap_get___ns1__CommandAgentStartChat(soap, &soap_tmp___ns1__CommandAgentStartChat, "-ns1:CommandAgentStartChat", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CommandAgentStartChat(soap_tmp___ns1__CommandAgentStartChat.ns1__StartChatRequestAcd, ns1__StartChatResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__StartChatResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__StartChatResponse.soap_put(soap, "ns1:StartChatResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__StartChatResponse.soap_put(soap, "ns1:StartChatResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__CommandAgentStartChat.ns1__StartChatRequestAcd->requestInfoHeader;
    delete soap_tmp___ns1__CommandAgentStartChat.ns1__StartChatRequestAcd;
	return soap_closesock(soap);
}

static int serve___ns1__CommandAgentStartRecord(EMISwebBindingService *soap)
{	struct __ns1__CommandAgentStartRecord soap_tmp___ns1__CommandAgentStartRecord;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__CommandAgentStartRecord(soap, &soap_tmp___ns1__CommandAgentStartRecord);
	if (!soap_get___ns1__CommandAgentStartRecord(soap, &soap_tmp___ns1__CommandAgentStartRecord, "-ns1:CommandAgentStartRecord", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CommandAgentStartRecord(soap_tmp___ns1__CommandAgentStartRecord.ns1__StartRecordRequestAcd, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__CommandAgentStartRecord.ns1__StartRecordRequestAcd->requestInfoHeader;
    delete soap_tmp___ns1__CommandAgentStartRecord.ns1__StartRecordRequestAcd;
	return soap_closesock(soap);
}

static int serve___ns1__CommandAgentTelephonyFeatures(EMISwebBindingService *soap)
{	struct __ns1__CommandAgentTelephonyFeatures soap_tmp___ns1__CommandAgentTelephonyFeatures;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__CommandAgentTelephonyFeatures(soap, &soap_tmp___ns1__CommandAgentTelephonyFeatures);
	if (!soap_get___ns1__CommandAgentTelephonyFeatures(soap, &soap_tmp___ns1__CommandAgentTelephonyFeatures, "-ns1:CommandAgentTelephonyFeatures", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CommandAgentTelephonyFeatures(soap_tmp___ns1__CommandAgentTelephonyFeatures.ns1__RequestTf, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__CommandAgentTelephonyFeatures.ns1__RequestTf->requestInfoHeader;
    delete soap_tmp___ns1__CommandAgentTelephonyFeatures.ns1__RequestTf;
	return soap_closesock(soap);
}

static int serve___ns1__SaveWorkspase(EMISwebBindingService *soap)
{	struct __ns1__SaveWorkspase soap_tmp___ns1__SaveWorkspase;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__SaveWorkspase(soap, &soap_tmp___ns1__SaveWorkspase);
	if (!soap_get___ns1__SaveWorkspase(soap, &soap_tmp___ns1__SaveWorkspase, "-ns1:SaveWorkspase", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SaveWorkspase(soap_tmp___ns1__SaveWorkspase.ns1__RequestSaveWorkspase, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__SaveWorkspase.ns1__RequestSaveWorkspase->requestInfoHeader;
    delete soap_tmp___ns1__SaveWorkspase.ns1__RequestSaveWorkspase;
	return soap_closesock(soap);
}

static int serve___ns1__SaveReport(EMISwebBindingService *soap)
{	struct __ns1__SaveReport soap_tmp___ns1__SaveReport;
	ns1__ResponseSaveReportType ns1__ResponseSaveReport;
	ns1__ResponseSaveReport.soap_default(soap);
	soap_default___ns1__SaveReport(soap, &soap_tmp___ns1__SaveReport);
	if (!soap_get___ns1__SaveReport(soap, &soap_tmp___ns1__SaveReport, "-ns1:SaveReport", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SaveReport(soap_tmp___ns1__SaveReport.ns1__RequestSaveReport, ns1__ResponseSaveReport);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ResponseSaveReport.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ResponseSaveReport.soap_put(soap, "ns1:ResponseSaveReport", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ResponseSaveReport.soap_put(soap, "ns1:ResponseSaveReport", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__SaveReport.ns1__RequestSaveReport->requestInfoHeader;
    delete soap_tmp___ns1__SaveReport.ns1__RequestSaveReport;
	return soap_closesock(soap);
}

static int serve___ns1__DeleteReport(EMISwebBindingService *soap)
{	struct __ns1__DeleteReport soap_tmp___ns1__DeleteReport;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__DeleteReport(soap, &soap_tmp___ns1__DeleteReport);
	if (!soap_get___ns1__DeleteReport(soap, &soap_tmp___ns1__DeleteReport, "-ns1:DeleteReport", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DeleteReport(soap_tmp___ns1__DeleteReport.ns1__RequestDeleteReport, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__DeleteReport.ns1__RequestDeleteReport->requestInfoHeader;
    delete soap_tmp___ns1__DeleteReport.ns1__RequestDeleteReport;
	return soap_closesock(soap);
}

static int serve___ns1__LoginManagerAgentsPerGroup(EMISwebBindingService *soap)
{	struct __ns1__LoginManagerAgentsPerGroup soap_tmp___ns1__LoginManagerAgentsPerGroup;
	ns1__GenListReturnType ns1__LoginManagerResponse;
	ns1__LoginManagerResponse.soap_default(soap);
	soap_default___ns1__LoginManagerAgentsPerGroup(soap, &soap_tmp___ns1__LoginManagerAgentsPerGroup);
	if (!soap_get___ns1__LoginManagerAgentsPerGroup(soap, &soap_tmp___ns1__LoginManagerAgentsPerGroup, "-ns1:LoginManagerAgentsPerGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LoginManagerAgentsPerGroup(soap_tmp___ns1__LoginManagerAgentsPerGroup.ns1__LoginManagerRequestAgents, ns1__LoginManagerResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__LoginManagerResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__LoginManagerResponse.soap_dealloc();
    delete soap_tmp___ns1__LoginManagerAgentsPerGroup.ns1__LoginManagerRequestAgents->requestInfoHeader;
    delete soap_tmp___ns1__LoginManagerAgentsPerGroup.ns1__LoginManagerRequestAgents;
	return soap_closesock(soap);
}

static int serve___ns1__LoginManagerGroupsPerAgent(EMISwebBindingService *soap)
{	struct __ns1__LoginManagerGroupsPerAgent soap_tmp___ns1__LoginManagerGroupsPerAgent;
	ns1__GenListReturnType ns1__LoginManagerResponse;
	ns1__LoginManagerResponse.soap_default(soap);
	soap_default___ns1__LoginManagerGroupsPerAgent(soap, &soap_tmp___ns1__LoginManagerGroupsPerAgent);
	if (!soap_get___ns1__LoginManagerGroupsPerAgent(soap, &soap_tmp___ns1__LoginManagerGroupsPerAgent, "-ns1:LoginManagerGroupsPerAgent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LoginManagerGroupsPerAgent(soap_tmp___ns1__LoginManagerGroupsPerAgent.ns1__LoginManagerRequestGroups, ns1__LoginManagerResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__LoginManagerResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__LoginManagerResponse.soap_dealloc();
    delete soap_tmp___ns1__LoginManagerGroupsPerAgent.ns1__LoginManagerRequestGroups->requestInfoHeader;
    delete soap_tmp___ns1__LoginManagerGroupsPerAgent.ns1__LoginManagerRequestGroups;
	return soap_closesock(soap);
}

static int serve___ns1__LoginManagerOneAgentToMultiGroups(EMISwebBindingService *soap)
{	struct __ns1__LoginManagerOneAgentToMultiGroups soap_tmp___ns1__LoginManagerOneAgentToMultiGroups;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__LoginManagerOneAgentToMultiGroups(soap, &soap_tmp___ns1__LoginManagerOneAgentToMultiGroups);
	if (!soap_get___ns1__LoginManagerOneAgentToMultiGroups(soap, &soap_tmp___ns1__LoginManagerOneAgentToMultiGroups, "-ns1:LoginManagerOneAgentToMultiGroups", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LoginManagerOneAgentToMultiGroups(soap_tmp___ns1__LoginManagerOneAgentToMultiGroups.ns1__LoginLogoutRequestAcdOneAgent, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__LoginManagerOneAgentToMultiGroups.ns1__LoginLogoutRequestAcdOneAgent->requestInfoHeader;
    delete soap_tmp___ns1__LoginManagerOneAgentToMultiGroups.ns1__LoginLogoutRequestAcdOneAgent;
	return soap_closesock(soap);
}

static int serve___ns1__LoginManagerMultiAgentsToOneGroup(EMISwebBindingService *soap)
{	struct __ns1__LoginManagerMultiAgentsToOneGroup soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup;
	ns1__ResponseInfoHeaderType ns1__NoDataResponse;
	ns1__NoDataResponse.soap_default(soap);
	soap_default___ns1__LoginManagerMultiAgentsToOneGroup(soap, &soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup);
	if (!soap_get___ns1__LoginManagerMultiAgentsToOneGroup(soap, &soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup, "-ns1:LoginManagerMultiAgentsToOneGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LoginManagerMultiAgentsToOneGroup(soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup.ns1__LoginLogoutRequestAcdMultiAgents, ns1__NoDataResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__NoDataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__NoDataResponse.soap_put(soap, "ns1:NoDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup.ns1__LoginLogoutRequestAcdMultiAgents->requestInfoHeader;
    delete soap_tmp___ns1__LoginManagerMultiAgentsToOneGroup.ns1__LoginLogoutRequestAcdMultiAgents;
	return soap_closesock(soap);
}

static int serve___ns1__LoginManagerAvailableAgentsForGroup(EMISwebBindingService *soap)
{	struct __ns1__LoginManagerAvailableAgentsForGroup soap_tmp___ns1__LoginManagerAvailableAgentsForGroup;
	ns1__GenListReturnType ns1__LoginManagerResponse;
	ns1__LoginManagerResponse.soap_default(soap);
	soap_default___ns1__LoginManagerAvailableAgentsForGroup(soap, &soap_tmp___ns1__LoginManagerAvailableAgentsForGroup);
	if (!soap_get___ns1__LoginManagerAvailableAgentsForGroup(soap, &soap_tmp___ns1__LoginManagerAvailableAgentsForGroup, "-ns1:LoginManagerAvailableAgentsForGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LoginManagerAvailableAgentsForGroup(soap_tmp___ns1__LoginManagerAvailableAgentsForGroup.ns1__LoginManagerRequestAvailableAgents, ns1__LoginManagerResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__LoginManagerResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__LoginManagerResponse.soap_dealloc();
    delete soap_tmp___ns1__LoginManagerAvailableAgentsForGroup.ns1__LoginManagerRequestAvailableAgents->requestInfoHeader;
    delete soap_tmp___ns1__LoginManagerAvailableAgentsForGroup.ns1__LoginManagerRequestAvailableAgents;
	return soap_closesock(soap);
}

static int serve___ns1__LoginManagerAvailableGroupsForAgent(EMISwebBindingService *soap)
{	struct __ns1__LoginManagerAvailableGroupsForAgent soap_tmp___ns1__LoginManagerAvailableGroupsForAgent;
	ns1__GenListReturnType ns1__LoginManagerResponse;
	ns1__LoginManagerResponse.soap_default(soap);
	soap_default___ns1__LoginManagerAvailableGroupsForAgent(soap, &soap_tmp___ns1__LoginManagerAvailableGroupsForAgent);
	if (!soap_get___ns1__LoginManagerAvailableGroupsForAgent(soap, &soap_tmp___ns1__LoginManagerAvailableGroupsForAgent, "-ns1:LoginManagerAvailableGroupsForAgent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->LoginManagerAvailableGroupsForAgent(soap_tmp___ns1__LoginManagerAvailableGroupsForAgent.ns1__LoginManagerRequestAvailableGroups, ns1__LoginManagerResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__LoginManagerResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__LoginManagerResponse.soap_put(soap, "ns1:LoginManagerResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__LoginManagerResponse.soap_dealloc();
    delete soap_tmp___ns1__LoginManagerAvailableGroupsForAgent.ns1__LoginManagerRequestAvailableGroups->requestInfoHeader;
    delete soap_tmp___ns1__LoginManagerAvailableGroupsForAgent.ns1__LoginManagerRequestAvailableGroups;
	return soap_closesock(soap);
}

static int serve___ns1__ApplicationRegister(EMISwebBindingService *soap)
{	struct __ns1__ApplicationRegister soap_tmp___ns1__ApplicationRegister;
	ns1__ApplicationReturnType ns1__ApplicationRegisterResponse;
	ns1__ApplicationRegisterResponse.soap_default(soap);
	soap_default___ns1__ApplicationRegister(soap, &soap_tmp___ns1__ApplicationRegister);
	if (!soap_get___ns1__ApplicationRegister(soap, &soap_tmp___ns1__ApplicationRegister, "-ns1:ApplicationRegister", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ApplicationRegister(soap_tmp___ns1__ApplicationRegister.ns1__ApplicationRegisterRequest, ns1__ApplicationRegisterResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ApplicationRegisterResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ApplicationRegisterResponse.soap_put(soap, "ns1:ApplicationRegisterResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ApplicationRegisterResponse.soap_put(soap, "ns1:ApplicationRegisterResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__ApplicationRegister.ns1__ApplicationRegisterRequest;
	return soap_closesock(soap);
}

static int serve___ns1__ApplicationKeepAlive(EMISwebBindingService *soap)
{	struct __ns1__ApplicationKeepAlive soap_tmp___ns1__ApplicationKeepAlive;
	ns1__ApplicationReturnType ns1__ApplicationKeepAliveResponse;
	ns1__ApplicationKeepAliveResponse.soap_default(soap);
	soap_default___ns1__ApplicationKeepAlive(soap, &soap_tmp___ns1__ApplicationKeepAlive);
	if (!soap_get___ns1__ApplicationKeepAlive(soap, &soap_tmp___ns1__ApplicationKeepAlive, "-ns1:ApplicationKeepAlive", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ApplicationKeepAlive(soap_tmp___ns1__ApplicationKeepAlive.ns1__ApplicationKeepAliveRequest, ns1__ApplicationKeepAliveResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ApplicationKeepAliveResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ApplicationKeepAliveResponse.soap_put(soap, "ns1:ApplicationKeepAliveResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ApplicationKeepAliveResponse.soap_put(soap, "ns1:ApplicationKeepAliveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__ApplicationKeepAlive.ns1__ApplicationKeepAliveRequest;
	return soap_closesock(soap);
}

static int serve___ns1__TraceInternalStat(EMISwebBindingService *soap)
{	struct __ns1__TraceInternalStat soap_tmp___ns1__TraceInternalStat;
	ns1__StatReturnType ns1__TraceInternalStatResponse;
	ns1__TraceInternalStatResponse.soap_default(soap);
	soap_default___ns1__TraceInternalStat(soap, &soap_tmp___ns1__TraceInternalStat);
	if (!soap_get___ns1__TraceInternalStat(soap, &soap_tmp___ns1__TraceInternalStat, "-ns1:TraceInternalStat", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->TraceInternalStat(soap_tmp___ns1__TraceInternalStat.ns1__TraceInternalStatRequest, ns1__TraceInternalStatResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__TraceInternalStatResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__TraceInternalStatResponse.soap_put(soap, "ns1:TraceInternalStatResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__TraceInternalStatResponse.soap_put(soap, "ns1:TraceInternalStatResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    delete soap_tmp___ns1__TraceInternalStat.ns1__TraceInternalStatRequest;
	return soap_closesock(soap);
}

static int serve___ns1__AgentNeedHelp(EMISwebBindingService *soap)
{	struct __ns1__AgentNeedHelp soap_tmp___ns1__AgentNeedHelp;
	ns1__ReturnMatrixDataTypeBG ns1__AgentNeedHelpResponse;
	ns1__AgentNeedHelpResponse.soap_default(soap);
	soap_default___ns1__AgentNeedHelp(soap, &soap_tmp___ns1__AgentNeedHelp);
	if (!soap_get___ns1__AgentNeedHelp(soap, &soap_tmp___ns1__AgentNeedHelp, "-ns1:AgentNeedHelp", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AgentNeedHelp(soap_tmp___ns1__AgentNeedHelp.ns1__AgentNeedHelpRequest, ns1__AgentNeedHelpResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__AgentNeedHelpResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__AgentNeedHelpResponse.soap_put(soap, "ns1:AgentNeedHelpResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__AgentNeedHelpResponse.soap_put(soap, "ns1:AgentNeedHelpResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__AgentNeedHelpResponse.soap_dealloc();
    delete soap_tmp___ns1__AgentNeedHelp.ns1__AgentNeedHelpRequest->requestInfoHeader;
    delete soap_tmp___ns1__AgentNeedHelp.ns1__AgentNeedHelpRequest;
	return soap_closesock(soap);
}

static int serve___ns1__GroupHourlyInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupHourlyInfo soap_tmp___ns1__GroupHourlyInfo;
	ns1__ReturnMatrixDataTypePerGroup ns1__GroupHourlyInfoResponse;
	ns1__GroupHourlyInfoResponse.soap_default(soap);
	soap_default___ns1__GroupHourlyInfo(soap, &soap_tmp___ns1__GroupHourlyInfo);
	if (!soap_get___ns1__GroupHourlyInfo(soap, &soap_tmp___ns1__GroupHourlyInfo, "-ns1:GroupHourlyInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupHourlyInfo(soap_tmp___ns1__GroupHourlyInfo.ns1__GroupHourlyInfoRequest, ns1__GroupHourlyInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GroupHourlyInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GroupHourlyInfoResponse.soap_put(soap, "ns1:GroupHourlyInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GroupHourlyInfoResponse.soap_put(soap, "ns1:GroupHourlyInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__GroupHourlyInfoResponse.soap_dealloc();
    delete soap_tmp___ns1__GroupHourlyInfo.ns1__GroupHourlyInfoRequest->requestInfoHeader;
    delete soap_tmp___ns1__GroupHourlyInfo.ns1__GroupHourlyInfoRequest;
	return soap_closesock(soap);
}

static int serve___ns1__GroupDailyBriefInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupDailyBriefInfo soap_tmp___ns1__GroupDailyBriefInfo;
	ns1__ReturnArrayDataType ns1__GroupDailyBriefInfoResponse;
	ns1__GroupDailyBriefInfoResponse.soap_default(soap);
	soap_default___ns1__GroupDailyBriefInfo(soap, &soap_tmp___ns1__GroupDailyBriefInfo);
	if (!soap_get___ns1__GroupDailyBriefInfo(soap, &soap_tmp___ns1__GroupDailyBriefInfo, "-ns1:GroupDailyBriefInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupDailyBriefInfo(soap_tmp___ns1__GroupDailyBriefInfo.ns1__GroupDailyBriefInfoRequest, ns1__GroupDailyBriefInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GroupDailyBriefInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GroupDailyBriefInfoResponse.soap_put(soap, "ns1:GroupDailyBriefInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GroupDailyBriefInfoResponse.soap_put(soap, "ns1:GroupDailyBriefInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__GroupDailyBriefInfoResponse.soap_dealloc();
    delete soap_tmp___ns1__GroupDailyBriefInfo.ns1__GroupDailyBriefInfoRequest->requestInfoHeader;
    delete soap_tmp___ns1__GroupDailyBriefInfo.ns1__GroupDailyBriefInfoRequest;
	return soap_closesock(soap);
}

static int serve___ns1__GroupDailyDetailedInfo(EMISwebBindingService *soap)
{	struct __ns1__GroupDailyDetailedInfo soap_tmp___ns1__GroupDailyDetailedInfo;
	ns1__ReturnArrayDataType ns1__GroupDailyDetailedInfoResponse;
	ns1__GroupDailyDetailedInfoResponse.soap_default(soap);
	soap_default___ns1__GroupDailyDetailedInfo(soap, &soap_tmp___ns1__GroupDailyDetailedInfo);
	if (!soap_get___ns1__GroupDailyDetailedInfo(soap, &soap_tmp___ns1__GroupDailyDetailedInfo, "-ns1:GroupDailyDetailedInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GroupDailyDetailedInfo(soap_tmp___ns1__GroupDailyDetailedInfo.ns1__GroupDailyDetailedInfoRequest, ns1__GroupDailyDetailedInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GroupDailyDetailedInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GroupDailyDetailedInfoResponse.soap_put(soap, "ns1:GroupDailyDetailedInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GroupDailyDetailedInfoResponse.soap_put(soap, "ns1:GroupDailyDetailedInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__GroupDailyDetailedInfoResponse.soap_dealloc();
    delete soap_tmp___ns1__GroupDailyDetailedInfo.ns1__GroupDailyDetailedInfoRequest->requestInfoHeader;
    delete soap_tmp___ns1__GroupDailyDetailedInfo.ns1__GroupDailyDetailedInfoRequest;
	return soap_closesock(soap);
}

static int serve___ns1__SuperGroupHourlyInfo(EMISwebBindingService *soap)
{	struct __ns1__SuperGroupHourlyInfo soap_tmp___ns1__SuperGroupHourlyInfo;
	ns1__ReturnMatrixDataTypePerSuperGroup ns1__SuperGroupHourlyInfoResponse;
	ns1__SuperGroupHourlyInfoResponse.soap_default(soap);
	soap_default___ns1__SuperGroupHourlyInfo(soap, &soap_tmp___ns1__SuperGroupHourlyInfo);
	if (!soap_get___ns1__SuperGroupHourlyInfo(soap, &soap_tmp___ns1__SuperGroupHourlyInfo, "-ns1:SuperGroupHourlyInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SuperGroupHourlyInfo(soap_tmp___ns1__SuperGroupHourlyInfo.ns1__SuperGroupHourlyInfoRequest, ns1__SuperGroupHourlyInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__SuperGroupHourlyInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__SuperGroupHourlyInfoResponse.soap_put(soap, "ns1:SuperGroupHourlyInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__SuperGroupHourlyInfoResponse.soap_put(soap, "ns1:SuperGroupHourlyInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__SuperGroupHourlyInfoResponse.soap_dealloc();
    delete soap_tmp___ns1__SuperGroupHourlyInfo.ns1__SuperGroupHourlyInfoRequest->requestInfoHeader;
    delete soap_tmp___ns1__SuperGroupHourlyInfo.ns1__SuperGroupHourlyInfoRequest;
	return soap_closesock(soap);
}

static int serve___ns1__SuperGroupDailyBriefInfo(EMISwebBindingService *soap)
{	struct __ns1__SuperGroupDailyBriefInfo soap_tmp___ns1__SuperGroupDailyBriefInfo;
	ns1__ReturnArrayDataType ns1__SuperGroupDailyBriefInfoResponse;
	ns1__SuperGroupDailyBriefInfoResponse.soap_default(soap);
	soap_default___ns1__SuperGroupDailyBriefInfo(soap, &soap_tmp___ns1__SuperGroupDailyBriefInfo);
	if (!soap_get___ns1__SuperGroupDailyBriefInfo(soap, &soap_tmp___ns1__SuperGroupDailyBriefInfo, "-ns1:SuperGroupDailyBriefInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SuperGroupDailyBriefInfo(soap_tmp___ns1__SuperGroupDailyBriefInfo.ns1__SuperGroupDailyBriefInfoRequest, ns1__SuperGroupDailyBriefInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__SuperGroupDailyBriefInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__SuperGroupDailyBriefInfoResponse.soap_put(soap, "ns1:SuperGroupDailyBriefInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__SuperGroupDailyBriefInfoResponse.soap_put(soap, "ns1:SuperGroupDailyBriefInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
    ns1__SuperGroupDailyBriefInfoResponse.soap_dealloc();
    delete soap_tmp___ns1__SuperGroupDailyBriefInfo.ns1__SuperGroupDailyBriefInfoRequest->requestInfoHeader;
    delete soap_tmp___ns1__SuperGroupDailyBriefInfo.ns1__SuperGroupDailyBriefInfoRequest;
	return soap_closesock(soap);
}

/* End of server object code */
