/* soapEMISwebBindingService.h
   Generated by gSOAP 2.8.52 for emisweb.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapEMISwebBindingService_H
#define soapEMISwebBindingService_H
#include "soapH.h"

    class SOAP_CMAC EMISwebBindingService : public soap {
      public:
        /// Context to manage service IO and data
        //struct soap *soap;
        bool soap_own;  ///< flag indicating that this context is owned by this service when context is shared
        
        /// Variables globally declared in emisweb.h, if any
        /// Construct a service with new managing context
        EMISwebBindingService();
        /// Copy constructor
        EMISwebBindingService(const EMISwebBindingService&);
        /// Construct service given a managing context
        EMISwebBindingService(const struct soap&);
        /// Constructor taking input+output mode flags for the new managing context
        EMISwebBindingService(soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        EMISwebBindingService(soap_mode imode, soap_mode omode);
        /// Destructor deletes non-shared managing context only (use destroy() to delete deserialized data)
        virtual ~EMISwebBindingService();
        /// Delete all deserialized data (with soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to defaults
        virtual void reset();
        /// Initializer used by constructors
        virtual void EMISwebBindingService_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual EMISwebBindingService *copy() SOAP_PURE_VIRTUAL;
        /// Copy assignment
        EMISwebBindingService& operator=(const EMISwebBindingService&);
        /// Close connection (normally automatic)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Return sender-related fault to sender
        virtual int soap_senderfault(const char *string, const char *detailXML);
        /// Return sender-related fault with SOAP 1.2 subcode to sender
        virtual int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
        /// Return receiver-related fault to sender
        virtual int soap_receiverfault(const char *string, const char *detailXML);
        /// Return receiver-related fault with SOAP 1.2 subcode to sender
        virtual int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
    #ifndef WITH_NOIO
        /// Run simple single-thread (iterative, non-SSL) service on port until a connection error occurs (returns SOAP_OK or error code), use this->bind_flag = SO_REUSEADDR to rebind for immediate rerun
        virtual int run(int port);
    #if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
        /// Run simple single-thread SSL service on port until a connection error occurs (returns SOAP_OK or error code), use this->bind_flag = SO_REUSEADDR to rebind for immediate rerun
        virtual int ssl_run(int port);
    #endif
        /// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
        virtual SOAP_SOCKET bind(const char *host, int port, int backlog);
        /// Accept next request (returns socket or SOAP_INVALID_SOCKET)
        virtual SOAP_SOCKET accept();
    #if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
        /// When SSL is used, after accept() should perform and accept SSL handshake
        virtual int ssl_accept();
    #endif
    #endif
        /// After accept() serve this request (returns SOAP_OK or error code)
        virtual int serve();
        /// Used by serve() to dispatch a request (returns SOAP_OK or error code)
        virtual int dispatch();
        //virtual int dispatch(struct soap *soap);
        ///
        /// Service operations are listed below (you should define these)
        /// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
        ///
        /// Web service operation 'GroupDetailFullInfo' (returns SOAP_OK or error code)
        virtual int GroupDetailFullInfo(ns1__GenInfoRequestType *ns1__RequestGroupDetailFullInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupDetailFullInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupQueInfo' (returns SOAP_OK or error code)
        virtual int GroupQueInfo(ns1__GenInfoRequestType *ns1__RequestGroupQueInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupQueInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupAgentsInfo' (returns SOAP_OK or error code)
        virtual int GroupAgentsInfo(ns1__GenInfoRequestType *ns1__RequestGroupAgentsInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupAgentsInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupAbndInfo' (returns SOAP_OK or error code)
        virtual int GroupAbndInfo(ns1__GenInfoRequestType *ns1__RequestGroupAbndInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupAbndInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupIntOvfInfo' (returns SOAP_OK or error code)
        virtual int GroupIntOvfInfo(ns1__GenInfoRequestType *ns1__RequestGroupIntOvfInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupIntOvfInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupShiftInfo' (returns SOAP_OK or error code)
        virtual int GroupShiftInfo(ns1__GenInfoRequestType *ns1__RequestGroupShiftInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupShiftInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupGeneralInfo' (returns SOAP_OK or error code)
        virtual int GroupGeneralInfo(ns1__GenInfoRequestType *ns1__RequestGroupGeneralInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupGeneralInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupPeriodInfo' (returns SOAP_OK or error code)
        virtual int GroupPeriodInfo(ns1__GenInfoRequestType *ns1__RequestGroupPeriodInfo, ns1__ReturnArrayDataType &ns1__ReturnGroupPeriodInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'IvrApplInfo' (returns SOAP_OK or error code)
        virtual int IvrApplInfo(ns1__GenInfoRequestType *ns1__RequestIvrApplInfo, ns1__ReturnArrayDataType &ns1__ReturnIvrApplInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'IvrPortInfo' (returns SOAP_OK or error code)
        virtual int IvrPortInfo(ns1__GenInfoRequestType *ns1__RequestIvrPortInfo, ns1__ReturnArrayDataType &ns1__ReturnIvrPortInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'IvrGrpInfo' (returns SOAP_OK or error code)
        virtual int IvrGrpInfo(ns1__GenInfoRequestType *ns1__RequestIvrGrpInfo, ns1__ReturnArrayDataType &ns1__ReturnIvrGrpInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'MailboxInfo' (returns SOAP_OK or error code)
        virtual int MailboxInfo(ns1__GenInfoRequestType *ns1__RequestMailboxInfo, ns1__ReturnArrayDataType &ns1__ReturnMailboxInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'SuperGroupInfo' (returns SOAP_OK or error code)
        virtual int SuperGroupInfo(ns1__GenInfoRequestType *ns1__RequestSuperGroupInfo, ns1__ReturnArrayDataType &ns1__ReturnSuperGroupInfo) SOAP_PURE_VIRTUAL;
        /// Web service operation 'SuperGroupList' (returns SOAP_OK or error code)
        virtual int SuperGroupList(ns1__GenRequestType *ns1__RequestSuperGroupList, ns1__SuperGroupListReturnType &ns1__ReturnSuperGroupList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'UserLogin' (returns SOAP_OK or error code)
        virtual int UserLogin(ns1__LoginRequestType *ns1__RequestUserLogin, ns1__LoginReturnType &ns1__ReturnUserLogin) SOAP_PURE_VIRTUAL;
        /// Web service operation 'UserLogout' (returns SOAP_OK or error code)
        virtual int UserLogout(ns1__GenRequestType *ns1__RequestUserLogout, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupList' (returns SOAP_OK or error code)
        virtual int GroupList(ns1__GenRequestType *ns1__RequestGroupList, ns1__GroupListReturnType &ns1__ReturnGroupList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'IvrPortGroupList' (returns SOAP_OK or error code)
        virtual int IvrPortGroupList(ns1__GenRequestType *ns1__RequestIvrPortGroupList, ns1__GenListReturnType &ns1__ReturnIvrPortGroupList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'IvrAppList' (returns SOAP_OK or error code)
        virtual int IvrAppList(ns1__GenRequestType *ns1__RequestIvrAppList, ns1__GenListReturnType &ns1__ReturnIvrAppList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'MailAccList' (returns SOAP_OK or error code)
        virtual int MailAccList(ns1__GenRequestType *ns1__RequestMailAccList, ns1__GenListReturnType &ns1__ReturnMailAccList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'AgentsPerGroupInfo' (returns SOAP_OK or error code)
        virtual int AgentsPerGroupInfo(ns1__GenInfoRequestType *ns1__RequestGroupAgentsMatrix, ns1__ReturnMatrixDataTypePerGroup &ns1__ReturnGroupAgentsMatrix) SOAP_PURE_VIRTUAL;
        /// Web service operation 'AgentsList' (returns SOAP_OK or error code)
        virtual int AgentsList(ns1__GenRequestType *ns1__RequestAgentsList, ns1__AgentsListReturnType &ns1__ReturnAgentsList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'BriefAgents' (returns SOAP_OK or error code)
        virtual int BriefAgents(ns1__BriefInfoRequestType *ns1__RequestBriefAgentsMatrix, ns1__ReturnMatrixDataTypeBG &ns1__ReturnBriefAgentsMatrix) SOAP_PURE_VIRTUAL;
        /// Web service operation 'DefaultWorkspace' (returns SOAP_OK or error code)
        virtual int DefaultWorkspace(ns1__DefaultWorkspaceRequestType *ns1__RequestDefaultWorkspace, ns1__DefaultWorkspaceReturnType &ns1__ReturnDefaultWorkspace) SOAP_PURE_VIRTUAL;
        /// Web service operation 'ReportListData' (returns SOAP_OK or error code)
        virtual int ReportListData(ns1__ReportListDataRequestType *ns1__RequestReportListData, ns1__ReportListDataReturnType &ns1__ReturnReportListData) SOAP_PURE_VIRTUAL;
        /// Web service operation 'VoiceDNISList' (returns SOAP_OK or error code)
        virtual int VoiceDNISList(ns1__GenRequestType *ns1__RequestVoiceDNISList, ns1__DNISListReturnType &ns1__ReturnVoiceDNISList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'EmailDNISList' (returns SOAP_OK or error code)
        virtual int EmailDNISList(ns1__GenRequestType *ns1__RequestEmailDNISList, ns1__DNISListReturnType &ns1__ReturnEmailDNISList) SOAP_PURE_VIRTUAL;
        /// Web service operation 'BriefVoiceDNIS' (returns SOAP_OK or error code)
        virtual int BriefVoiceDNIS(ns1__BriefInfoRequestType *ns1__RequestBriefVoiceDNISMatrix, ns1__ReturnMatrixDataTypeBG &ns1__ReturnBriefVoiceDNISMatrix) SOAP_PURE_VIRTUAL;
        /// Web service operation 'BriefEmailDNIS' (returns SOAP_OK or error code)
        virtual int BriefEmailDNIS(ns1__BriefInfoRequestType *ns1__RequestBriefEMailDNISMatrix, ns1__ReturnMatrixDataTypeBG &ns1__ReturnBriefEMailDNISMatrix) SOAP_PURE_VIRTUAL;
        /// Web service operation 'CommandAgentLoginLogout' (returns SOAP_OK or error code)
        virtual int CommandAgentLoginLogout(ns1__ACDMultiRequestType *ns1__LoginLogoutRequestAcdComandAgent, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'CommandAgentReleaseResume' (returns SOAP_OK or error code)
        virtual int CommandAgentReleaseResume(ns1__ACDRequestType *ns1__ReleaseResumeRequestAcd, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'CommandAgentStartChat' (returns SOAP_OK or error code)
        virtual int CommandAgentStartChat(ns1__TFRequestType *ns1__StartChatRequestAcd, ns1__ChatResponseType &ns1__StartChatResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'CommandAgentStartRecord' (returns SOAP_OK or error code)
        virtual int CommandAgentStartRecord(ns1__TFRequestType *ns1__StartRecordRequestAcd, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'CommandAgentTelephonyFeatures' (returns SOAP_OK or error code)
        virtual int CommandAgentTelephonyFeatures(ns1__TFRequestType *ns1__RequestTf, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'SaveWorkspase' (returns SOAP_OK or error code)
        virtual int SaveWorkspase(ns1__SaveWorkspaseRequestType *ns1__RequestSaveWorkspase, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'SaveReport' (returns SOAP_OK or error code)
        virtual int SaveReport(ns1__RequestSaveReportType *ns1__RequestSaveReport, ns1__ResponseSaveReportType &ns1__ResponseSaveReport) SOAP_PURE_VIRTUAL;
        /// Web service operation 'DeleteReport' (returns SOAP_OK or error code)
        virtual int DeleteReport(ns1__RequestDeleteReportType *ns1__RequestDeleteReport, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'LoginManagerAgentsPerGroup' (returns SOAP_OK or error code)
        virtual int LoginManagerAgentsPerGroup(ns1__LoginManagerRequestType *ns1__LoginManagerRequestAgents, ns1__GenListReturnType &ns1__LoginManagerResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'LoginManagerGroupsPerAgent' (returns SOAP_OK or error code)
        virtual int LoginManagerGroupsPerAgent(ns1__LoginManagerRequestType *ns1__LoginManagerRequestGroups, ns1__GenListReturnType &ns1__LoginManagerResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'LoginManagerOneAgentToMultiGroups' (returns SOAP_OK or error code)
        virtual int LoginManagerOneAgentToMultiGroups(ns1__ACDMultiRequestType *ns1__LoginLogoutRequestAcdOneAgent, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'LoginManagerMultiAgentsToOneGroup' (returns SOAP_OK or error code)
        virtual int LoginManagerMultiAgentsToOneGroup(ns1__ACDMultiRequestType *ns1__LoginLogoutRequestAcdMultiAgents, ns1__ResponseInfoHeaderType &ns1__NoDataResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'LoginManagerAvailableAgentsForGroup' (returns SOAP_OK or error code)
        virtual int LoginManagerAvailableAgentsForGroup(ns1__LoginManagerRequestType *ns1__LoginManagerRequestAvailableAgents, ns1__GenListReturnType &ns1__LoginManagerResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'LoginManagerAvailableGroupsForAgent' (returns SOAP_OK or error code)
        virtual int LoginManagerAvailableGroupsForAgent(ns1__LoginManagerRequestType *ns1__LoginManagerRequestAvailableGroups, ns1__GenListReturnType &ns1__LoginManagerResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'ApplicationRegister' (returns SOAP_OK or error code)
        virtual int ApplicationRegister(ns1__ApplicationRegisterRequestType *ns1__ApplicationRegisterRequest, ns1__ApplicationReturnType &ns1__ApplicationRegisterResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'ApplicationKeepAlive' (returns SOAP_OK or error code)
        virtual int ApplicationKeepAlive(ns1__ApplicationKeepAliveRequestType *ns1__ApplicationKeepAliveRequest, ns1__ApplicationReturnType &ns1__ApplicationKeepAliveResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'TraceInternalStat' (returns SOAP_OK or error code)
        virtual int TraceInternalStat(ns1__StatRequestType *ns1__TraceInternalStatRequest, ns1__StatReturnType &ns1__TraceInternalStatResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'AgentNeedHelp' (returns SOAP_OK or error code)
        virtual int AgentNeedHelp(ns1__BriefInfoRequestType *ns1__AgentNeedHelpRequest, ns1__ReturnMatrixDataTypeBG &ns1__AgentNeedHelpResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupHourlyInfo' (returns SOAP_OK or error code)
        virtual int GroupHourlyInfo(ns1__GenInfoRequestType *ns1__GroupHourlyInfoRequest, ns1__ReturnMatrixDataTypePerGroup &ns1__GroupHourlyInfoResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupDailyBriefInfo' (returns SOAP_OK or error code)
        virtual int GroupDailyBriefInfo(ns1__GenInfoRequestType *ns1__GroupDailyBriefInfoRequest, ns1__ReturnArrayDataType &ns1__GroupDailyBriefInfoResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'GroupDailyDetailedInfo' (returns SOAP_OK or error code)
        virtual int GroupDailyDetailedInfo(ns1__GenInfoRequestType *ns1__GroupDailyDetailedInfoRequest, ns1__ReturnArrayDataType &ns1__GroupDailyDetailedInfoResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'SuperGroupHourlyInfo' (returns SOAP_OK or error code)
        virtual int SuperGroupHourlyInfo(ns1__GenInfoRequestType *ns1__SuperGroupHourlyInfoRequest, ns1__ReturnMatrixDataTypePerSuperGroup &ns1__SuperGroupHourlyInfoResponse) SOAP_PURE_VIRTUAL;
        /// Web service operation 'SuperGroupDailyBriefInfo' (returns SOAP_OK or error code)
        virtual int SuperGroupDailyBriefInfo(ns1__GenInfoRequestType *ns1__SuperGroupDailyBriefInfoRequest, ns1__ReturnArrayDataType &ns1__SuperGroupDailyBriefInfoResponse) SOAP_PURE_VIRTUAL;
    };
#endif
